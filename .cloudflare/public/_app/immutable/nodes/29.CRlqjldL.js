import{f as p,a as e,b as sa}from"../chunks/CIHljEz0.js";import{p as na,a as ta,f as w,s as a,n as D,c as r,r as i,t as ca}from"../chunks/DDSqhxMg.js";import{h as C}from"../chunks/CEkn2uFW.js";import{s as m}from"../chunks/DPKhHaWt.js";import{D as ra,H as ia,B as x,p as g}from"../chunks/BNTF0WTh.js";import"../chunks/CciAC_Fd.js";import{E as P,C as J}from"../chunks/CyT2BtQZ.js";import{T as y,a as ua,b as da,c as Z}from"../chunks/CIFzuZ7W.js";import{S as aa}from"../chunks/bKJ9zslE.js";import{A as ka}from"../chunks/CU_Ce56s.js";import{S as ma}from"../chunks/BmOsGaYy.js";var ga=p('<a>About</a> <a>Example</a> <a class="ps-4">Setup</a> <a class="ps-4">Example: Using Props</a> <a class="ps-4">Example: Using Components</a> <a>Custom Header</a> <a>Table Border</a> <a href="#horizontal-border-x" class="ps-4">Horizontal border</a> <a href="#horizontal-border-y" class="ps-4">Vertical border</a> <a href="#horizontal-border-none" class="ps-4">Borderless table</a> <a>Table Spacing</a> <a href="#compact-spacing" class="ps-4">Compact spacing</a> <a href="#comfortable-spacing" class="ps-4">Comfortable spacing</a> <a>Stripe Rows</a> <a href="#striped-even-rows" class="ps-4">Striped even rows</a> <a href="#striped-odd-rows" class="ps-4">Striped odd rows</a> <a href="#striped-custom-even-rows" class="ps-4">Striped custom even rows</a> <a href="#striped-custom-odd-rows" class="ps-4">Striped custom odd rows</a> <a>Hoverable Rows</a> <a href="#default-hoverable-rows" class="ps-4">Default hoverable rows</a> <a href="#custom-hoverable-rows" class="ps-4">Custom hoverable rows</a> <a>Anatomy of Table</a> <a>Customization</a> <a>Accessibility</a> <a>Configuration</a> <a class="ps-4">Table</a> <a class="ps-4">Table head</a> <a class="ps-4">Table body</a> <a class="ps-4">Table row</a>',1),va=p('<p class="not-prose">The <code>Table</code> component is highly customizable and automatically generates tables from object/JSON data if needed. It supports custom styling, column alignment, and interactive features, making it easy to display structured data efficiently. Whether for simple data presentation or complex tables with sorting and filtering, this component ensures a clean and responsive layout.</p>'),ha=p('<pre class="language-html"><!></pre>'),ba=p('<p class="not-prose">At first import the relevant components of the table.</p>'),fa=p('<pre class="language-html"><!></pre>'),ya=p('<p class="not-prose">The <code>Table</code> component allows you to generate tables dynamically using data. This approach is useful when you have structured data and want to render it efficiently without manually defining each row and column. This method ensures your table remains dynamic and adaptable to different datasets.</p> <p class="not-prose">Pass the <code>headers</code>, <code>data</code>, and <code>keys</code> as props to the <code>Table</code> component.</p> <ul class="my-0"><li><span class="not-prose"><code>headers: string[]</code></span> - An array of column headers.</li> <li><span class="not-prose"><code>data: object[]</code></span> - An array of objects representing table rows.</li> <li><span class="not-prose"><code>keys: string[]</code></span> - An array of keys that map data fields to columns.</li></ul>',1),_a=p('<pre class="language-html"><!></pre>'),Ta=p('<p class="not-prose">Instead of props or dynamically looping through the data, the table content is written manually using the <code>TBody</code>, <code>TR</code>, and <code>Cell</code> components.</p> <ul class="my-0"><li><span class="not-prose"><code>&lt;TBody&gt;</code></span> - Contains the table rows.</li> <li><span class="not-prose"><code>&lt;TR&gt;</code></span> - Represents a table row.</li> <li><span class="not-prose"><code>&lt;TD&gt;</code></span> - Represents a table data containing the actual data.</li></ul>',1),wa=p('<div><p class="not-prose">The <code>Table</code> is a powerful, versatile component. You can create a table in many ways. For example:</p> <ul class="my-0"><li>Using data</li> <li>Using snippet</li> <li>Manually using the components</li></ul></div> <!> <!> <!>',1),$a=sa('<path d="M3.5 12.5a.5.5 0 0 1-1 0V3.707L1.354 4.854a.5.5 0 1 1-.708-.708l2-1.999.007-.007a.5.5 0 0 1 .7.006l2 2a.5.5 0 1 1-.707.708L3.5 3.707zm3.5-9a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5M7.5 6a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1zm0 3a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1zm0 3a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1z"></path>'),xa=p("Sort <!>",1),Ha=sa('<path d="M3.5 2.5a.5.5 0 0 0-1 0v8.793l-1.146-1.147a.5.5 0 0 0-.708.708l2 1.999.007.007a.497.497 0 0 0 .7-.006l2-2a.5.5 0 0 0-.707-.708L3.5 11.293zm3.5 1a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5M7.5 6a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1zm0 3a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1zm0 3a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1z"></path>'),Sa=p("Sort <!>",1),Da=p("<!> <!>",1),Ca=p('<pre class="language-html"><!></pre>'),Pa=p('<p class="not-prose">If you need custom headers or anything other than text in the header just put your custom items in the <code>TH</code> component. For example:</p>'),za=p('<div class="flex flex-col gap-4 w-full"><div id="horizontal-border-x"><span class="block font-semibold mb-2">Horizontal border: <code>border="x"</code></span> <!></div> <div id="horizontal-border-y"><span class="block font-semibold mb-2">Vertical border: <code>border="y"</code></span> <!></div> <div id="horizontal-border-none"><span class="block font-semibold mb-2">No border: <code>border="none"</code></span> <!></div></div>'),Aa=p('<pre class="language-html"><!></pre>'),Ra=p('<p class="not-prose">The <code>border</code> prop controls where borders appear in the table. By default, it is set to <code>"both"</code>. Setting it to <code>"x"</code> adds borders only between columns, while <code>"y"</code> applies borders only between rows. The default option, <code>"both"</code>, adds borders between both rows and columns, and <code>"none"</code> removes all borders. This prop allows you to customize the table’s appearance based on your design preferences.</p>'),Ba=p('<div class="flex flex-col gap-4 w-full"><div id="compact-spacing"><span class="block font-semibold mb-2">Compact spacing: <code>space="compact"</code></span> <!></div> <div id="comfortable-spacing"><span class="block font-semibold mb-2">Comfortable spacing: <code>space="comfortable"</code></span> <!></div></div>'),qa=p('<pre class="language-html"><!></pre>'),Ea=p('<p class="not-prose">The <code>space</code> prop adjusts the cell padding to control the overall table spacing, affecting how compact or spacious the table appears.</p> <ul class="my-0"><li><span class="not-prose"><code>"compact"</code></span> - Reduces padding for a denser layout, making the table more space-efficient.</li> <li><span class="not-prose"><code>"default"</code> (Default value)</span> - Uses the standard padding, providing a balanced look.</li> <li><span class="not-prose"><code>"comfortable"</code></span> - Increases padding for a more spacious and readable layout.</li></ul>',1),Ua=p('<!> <p class="not-prose">This prop allows you to fine-tune the table’s appearance based on your design needs.</p>',1),Ma=p('<div class="flex flex-col gap-4 w-full"><div id="striped-even-rows"><span class="block font-semibold mb-2">Striped even rows: <code>stripe="even"</code></span> <!></div> <div id="striped-odd-rows"><span class="block font-semibold mb-2">Striped odd rows: <code>stripe="odd"</code></span> <!></div> <div id="striped-custom-even-rows"><span class="block font-semibold mb-2">Striped even rows with custom classes: <code>stripe="&lt;CUSTOM CLASSES&gt;"</code></span> <!></div> <div id="striped-custom-odd-rows"><span class="block font-semibold mb-2">Striped odd rows with custom classes: <code>stripe="&lt;CUSTOM CLASSES&gt;"</code></span> <!></div></div>'),ja=p('<pre class="language-html"><!></pre>'),La=p('<div><p class="not-prose">The <code>stripe</code> prop adds alternating background colors to table rows, improving readability and visual distinction between rows. By default, this feature is disabled (<code>undefined</code>), meaning all rows have the same background.</p> <ul class="my-0"><li><span class="not-prose"><code>"even"</code></span> - Applies striping to even-numbered rows, making them visually distinct from odd rows.</li> <li><span class="not-prose"><code>"odd"</code> Applies striping to odd-numbered rows, enhancing readability by differentiating them from even rows.</span></li> <li><i class="font-semibold">Custom class names</i> - You can specify a class name instead of predefined values to apply custom styling. This allows full control over the appearance of striped rows, making it easy to match your design needs.</li></ul></div> <!>',1),Oa=p('<div class="flex flex-col gap-4 w-full"><div id="default-hoverable-rows"><span class="block font-semibold mb-2">Hoverable rows: <code></code></span> <!></div> <div id="custom-hoverable-rows"><span class="block font-semibold mb-2">Hoverable rows with custom classes: <code>hover="&lt;CUSTOM CLASSES&gt;"</code></span> <!></div></div>'),Ia=p('<pre class="language-html"><!></pre>'),Ya=p('<p class="not-prose">The <code>hover</code> prop enables a visual highlight effect when users hover over table rows. By default, this feature is disabled (undefined), meaning no hover effect is applied.</p> <ul class="my-0"><li><span class="not-prose"><code>true</code></span> - When set to <span class="not-prose"><code>true</code></span>, the row background color changes on hover, improving user experience and readability.</li> <li><i class="font-semibold">Custom class names</i> - Instead of using the default hover effect, you can pass a custom class to define your own hover styles, allowing for more design flexibility.</li></ul>',1),Va=p('<span>you can use <span class="not-prose"><code>class</code></span> attribute with any table related component to add your custom CSS classes.</span>'),Fa=p('<p class="not-prose">You can use the following props to customize the table’s appearance, allowing you to style the table and its elements as needed.</p> <ul class="my-0"><li><span class="not-prose"><code>borderColor</code></span> - Defines the border color for the table. By default, it is set to <code>"border-gray-200/80 dark:border-gray-800/80"</code>, ensuring a subtle contrast in both light and dark modes. You can override this with any Tailwind CSS border color class.</li> <li><span class="not-prose"><code>trHeadClasses</code></span> - Adds custom classes to the table header row ((&lt;tr&gt; inside &lt;thead&gt;)). This allows you to style the header separately, such as applying background colors, text styles, or spacing adjustments.</li> <li><span class="not-prose"><code>trClasses</code></span> - Applies custom classes to all table body rows (&lt;tr&gt; inside &lt;tbody&gt;). Use this to control row styling, such as padding, text alignment, or hover effects.</li> <li><span class="not-prose"><code>tdClasses</code></span> - Adds custom classes to all table cells (&lt;td&gt;), enabling precise control over text size, padding, alignment, or other styles.</li></ul> <!> <p class="not-prose">These props provide flexibility in styling, making it easy to adapt the table to different designs and themes.</p>',1),Na=p("<!> <!> <!> <!>",1),Wa=p("<!> <!> <!> <!> <!> <!> <!> <!> <!> <!>",1);function Ja(G,$){na($,!0);let h=["Heading 1","Heading 2","Heading 3","Heading 4"],b=[{item1:"Data 11",item2:"Data 12",item3:"Data 13",item4:"Data 14"},{item1:"Data 21",item2:"Data 22",item3:"Data 23",item4:"Data 24"},{item1:"Data 31",item2:"Data 23",item3:"Data 33",item4:"Data 43"}],f=["item1","item2","item3","item4"];ra(G,{sidebar:K=>{var Q=ga(),A=w(Q),R=a(A,2),B=a(R,2),q=a(B,2),E=a(q,2),U=a(E,2),M=a(U,2),j=a(M,8),L=a(j,6),O=a(L,10),W=a(O,6),k=a(W,2),T=a(k,2),d=a(T,2),v=a(d,2),l=a(v,2),t=a(l,2),s=a(t,2);ca((o,n,c,u,_,H,I,S,Y,z,V,F,X,N,ea,oa,pa,la)=>{m(A,"href",o),m(R,"href",n),m(B,"href",c),m(q,"href",u),m(E,"href",_),m(U,"href",H),m(M,"href",I),m(j,"href",S),m(L,"href",Y),m(O,"href",z),m(W,"href",V),m(k,"href",F),m(T,"href",X),m(d,"href",N),m(v,"href",ea),m(l,"href",oa),m(t,"href",pa),m(s,"href",la)},[()=>g("About"),()=>g("Example"),()=>g("Setup"),()=>g("Example: Using Props"),()=>g("Example: Using Components"),()=>g("Custom Header"),()=>g("Table Border"),()=>g("Table Spacing"),()=>g("Stripe Rows"),()=>g("Hoverable Rows"),()=>g("Anatomy of Table"),()=>g("Customization"),()=>g("Accessibility"),()=>g("Configuration"),()=>g("Table"),()=>g("Table Head"),()=>g("Table body"),()=>g("Table row")]),e(K,Q)},children:(K,Q)=>{var A=Wa(),R=w(A);ia(R,{title:"Table",text:"A flexible and customizable way to display data in a structured format. It supports various styling options and interactive features to enhance usability.",get edit_url(){return $.edit_url}});var B=a(R,2);x(B,{title:"About",children:(k,T)=>{var d=va();e(k,d)},$$slots:{default:!0}});var q=a(B,2);x(q,{title:"Example",children:(k,T)=>{var d=wa(),v=a(w(d),2);P(v,{title:"Setup",code:o=>{var n=ha(),c=r(n);C(c,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Table<span class="token punctuation">,</span> THead<span class="token punctuation">,</span> TBody<span class="token punctuation">,</span> <span class="token constant">TR</span><span class="token punctuation">,</span> <span class="token constant">TH</span><span class="token punctuation">,</span> <span class="token constant">TD</span> <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"theui-svelte"</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code>`),i(n),e(o,n)},children:(o,n)=>{var c=ba();e(o,c)},$$slots:{code:!0,default:!0}});var l=a(v,2);P(l,{title:"Example: Using Props",example:n=>{y(n,{headers:h,data:b,keys:f})},code:n=>{var c=fa(),u=r(c);C(u,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">let</span> headers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Heading 1"</span><span class="token punctuation">,</span> <span class="token string">"Heading 2"</span><span class="token punctuation">,</span> <span class="token string">"Heading 3"</span><span class="token punctuation">,</span> <span class="token string">"Heading 4"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">&#123;</span><span class="token literal-property property">item1</span><span class="token operator">:</span> <span class="token string">"Data 11"</span><span class="token punctuation">,</span> <span class="token literal-property property">item2</span><span class="token operator">:</span> <span class="token string">"Data 12"</span><span class="token punctuation">,</span> <span class="token literal-property property">item3</span><span class="token operator">:</span> <span class="token string">"Data 13"</span><span class="token punctuation">,</span> <span class="token literal-property property">item4</span><span class="token operator">:</span> <span class="token string">"Data 14"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#123;</span><span class="token literal-property property">item1</span><span class="token operator">:</span> <span class="token string">"Data 21"</span><span class="token punctuation">,</span> <span class="token literal-property property">item2</span><span class="token operator">:</span> <span class="token string">"Data 22"</span><span class="token punctuation">,</span> <span class="token literal-property property">item3</span><span class="token operator">:</span> <span class="token string">"Data 23"</span><span class="token punctuation">,</span> <span class="token literal-property property">item4</span><span class="token operator">:</span> <span class="token string">"Data 24"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#123;</span><span class="token literal-property property">item1</span><span class="token operator">:</span> <span class="token string">"Data 31"</span><span class="token punctuation">,</span> <span class="token literal-property property">item2</span><span class="token operator">:</span> <span class="token string">"Data 23"</span><span class="token punctuation">,</span> <span class="token literal-property property">item3</span><span class="token operator">:</span> <span class="token string">"Data 33"</span><span class="token punctuation">,</span> <span class="token literal-property property">item4</span><span class="token operator">:</span> <span class="token string">"Data 43"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> keys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"item1"</span><span class="token punctuation">,</span> <span class="token string">"item2"</span><span class="token punctuation">,</span> <span class="token string">"item3"</span><span class="token punctuation">,</span> <span class="token string">"item4"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token comment">&lt;!-- Option 1 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">&#123;headers&#125;</span> <span class="token attr-name">&#123;data&#125;</span> <span class="token attr-name">&#123;keys&#125;</span> <span class="token punctuation">/></span></span>

<span class="token comment">&lt;!-- Option 2 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>THead</span> <span class="token attr-name">&#123;headers&#125;</span> <span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TBody</span> <span class="token attr-name">&#123;data&#125;</span> <span class="token attr-name">&#123;keys&#125;</span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Table</span><span class="token punctuation">></span></span>

<span class="token comment">&lt;!-- Option 3 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">&#123;headers&#125;</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TBody</span><span class="token punctuation">></span></span>
    &#123;#each data as d&#125;
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TR</span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>&#123;d&#125;</span> <span class="token attr-name">&#123;keys&#125;</span> <span class="token punctuation">/></span></span>
    &#123;/each&#125;
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TBody</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Table</span><span class="token punctuation">></span></span></code>`),i(c),e(n,c)},children:(n,c)=>{var u=ya();D(4),e(n,u)},$$slots:{example:!0,code:!0,default:!0}});var t=a(l,2);P(t,{title:"Example: Using Components",example:n=>{y(n,{headers:h,data:b,keys:f})},code:n=>{var c=_a(),u=r(c);C(u,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">&#123;headers&#125;</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>THead</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TR</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TH</span><span class="token punctuation">></span></span>Heading 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TH</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TH</span><span class="token punctuation">></span></span>Heading 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TH</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TH</span><span class="token punctuation">></span></span>Heading 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TH</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TH</span><span class="token punctuation">></span></span>Heading 4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TH</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TR</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>THead</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TBody</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TR</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TD</span><span class="token punctuation">></span></span>Data 11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TD</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TD</span><span class="token punctuation">></span></span>Data 12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TD</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TD</span><span class="token punctuation">></span></span>Data 13<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TD</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TD</span><span class="token punctuation">></span></span>Data 14<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TD</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TR</span><span class="token punctuation">></span></span>
    ...
    ...
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TBody</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Table</span><span class="token punctuation">></span></span></code>`),i(c),e(n,c)},children:(n,c)=>{var u=Ta();D(2),e(n,u)},$$slots:{example:!0,code:!0,default:!0}}),e(k,d)},$$slots:{default:!0}});var E=a(q,2);x(E,{title:"Custom Header",children:(k,T)=>{P(k,{example:l=>{y(l,{children:(t,s)=>{ua(t,{children:(o,n)=>{da(o,{children:(c,u)=>{var _=Da(),H=w(_);Z(H,{class:"items-center gap-2",children:(S,Y)=>{D();var z=xa(),V=a(w(z));aa(V,{class:"inline",children:(F,X)=>{var N=$a();e(F,N)},$$slots:{default:!0}}),e(S,z)},$$slots:{default:!0}});var I=a(H,2);Z(I,{class:"items-center gap-2",children:(S,Y)=>{D();var z=Sa(),V=a(w(z));aa(V,{class:"inline",children:(F,X)=>{var N=Ha();e(F,N)},$$slots:{default:!0}}),e(S,z)},$$slots:{default:!0}}),e(c,_)},$$slots:{default:!0}})},$$slots:{default:!0}})},$$slots:{default:!0}})},code:l=>{var t=Ca(),s=r(t);C(s,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>THead</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TR</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TH</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>items-center gap-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        Sort
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Svg</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inline<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M3.5 12.5a.5.5 0 0 ... 0 1h1a.5.5 0 0 0 0-1z<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Svg</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TH</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TH</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>items-center gap-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        Sort
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Svg</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inline<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M3.5 2.5a.5.5 0 0 0-1 ... 1h1a.5.5 0 0 0 0-1z<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Svg</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TH</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TR</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>THead</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Table</span><span class="token punctuation">></span></span></code>`),i(t),e(l,t)},children:(l,t)=>{var s=Pa();e(l,s)},$$slots:{example:!0,code:!0,default:!0}})},$$slots:{default:!0}});var U=a(E,2);x(U,{title:"Table Border",children:(k,T)=>{P(k,{example:l=>{var t=za(),s=r(t),o=a(r(s),2);y(o,{headers:h,data:b,keys:f,border:"x"}),i(s);var n=a(s,2),c=a(r(n),2);y(c,{headers:h,data:b,keys:f,border:"y"}),i(n);var u=a(n,2),_=a(r(u),2);y(_,{headers:h,data:b,keys:f,border:"none"}),i(u),i(t),e(l,t)},code:l=>{var t=Aa(),s=r(t);C(s,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">&#123;headers&#125;</span> <span class="token attr-name">&#123;data&#125;</span> <span class="token attr-name">&#123;keys&#125;</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>x<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">&#123;headers&#125;</span> <span class="token attr-name">&#123;data&#125;</span> <span class="token attr-name">&#123;keys&#125;</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>y<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">&#123;headers&#125;</span> <span class="token attr-name">&#123;data&#125;</span> <span class="token attr-name">&#123;keys&#125;</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code>`),i(t),e(l,t)},children:(l,t)=>{var s=Ra();e(l,s)},$$slots:{example:!0,code:!0,default:!0}})},$$slots:{default:!0}});var M=a(U,2);x(M,{title:"Table Spacing",children:(k,T)=>{var d=Ua(),v=w(d);P(v,{example:s=>{var o=Ba(),n=r(o),c=a(r(n),2);y(c,{headers:h,data:b,keys:f,space:"compact"}),i(n);var u=a(n,2),_=a(r(u),2);y(_,{headers:h,data:b,keys:f,space:"comfortable"}),i(u),i(o),e(s,o)},code:s=>{var o=qa(),n=r(o);C(n,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">&#123;headers&#125;</span> <span class="token attr-name">&#123;data&#125;</span> <span class="token attr-name">&#123;keys&#125;</span> <span class="token attr-name">space</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>compact<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">&#123;headers&#125;</span> <span class="token attr-name">&#123;data&#125;</span> <span class="token attr-name">&#123;keys&#125;</span> <span class="token attr-name">space</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comfortable<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code>`),i(o),e(s,o)},children:(s,o)=>{var n=Ea();D(2),e(s,n)},$$slots:{example:!0,code:!0,default:!0}}),D(2),e(k,d)},$$slots:{default:!0}});var j=a(M,2);x(j,{title:"Stripe Rows",children:(k,T)=>{var d=La(),v=a(w(d),2);P(v,{example:s=>{var o=Ma(),n=r(o),c=a(r(n),2);y(c,{headers:h,data:b,keys:f,stripe:"even"}),i(n);var u=a(n,2),_=a(r(u),2);y(_,{headers:h,data:b,keys:f,stripe:"odd"}),i(u);var H=a(u,2),I=a(r(H),2);y(I,{headers:h,data:b,keys:f,stripe:"even:bg-green-100 dark:even:bg-green-900"}),i(H);var S=a(H,2),Y=a(r(S),2);y(Y,{headers:h,data:b,keys:f,stripe:"odd:bg-green-100 dark:odd:bg-green-900"}),i(S),i(o),e(s,o)},code:s=>{var o=ja(),n=r(o);C(n,()=>`<code class="language-html"><span class="token comment">&lt;!-- Striped even rows --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">&#123;headers&#125;</span> <span class="token attr-name">&#123;data&#125;</span> <span class="token attr-name">&#123;keys&#125;</span> <span class="token attr-name">stripe</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>even<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token comment">&lt;!-- Striped odd rows --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">&#123;headers&#125;</span> <span class="token attr-name">&#123;data&#125;</span> <span class="token attr-name">&#123;keys&#125;</span> <span class="token attr-name">stripe</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>odd<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token comment">&lt;!-- Striped even rows with custom classes --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">&#123;headers&#125;</span> <span class="token attr-name">&#123;data&#125;</span> <span class="token attr-name">&#123;keys&#125;</span> <span class="token attr-name">stripe</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>even:bg-green-100 dark:even:bg-green-900<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token comment">&lt;!-- Striped odd rows with custom classes --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">&#123;headers&#125;</span> <span class="token attr-name">&#123;data&#125;</span> <span class="token attr-name">&#123;keys&#125;</span> <span class="token attr-name">stripe</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>odd:bg-green-100 dark:odd:bg-green-900<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code>`),i(o),e(s,o)},$$slots:{example:!0,code:!0}}),e(k,d)},$$slots:{default:!0}});var L=a(j,2);x(L,{title:"Hoverable Rows",children:(k,T)=>{P(k,{example:l=>{var t=Oa(),s=r(t),o=r(s),n=a(r(o));n.textContent="hover={true}",i(o);var c=a(o,2);y(c,{headers:h,data:b,keys:f,hover:!0}),i(s);var u=a(s,2),_=a(r(u),2);y(_,{headers:h,data:b,keys:f,hover:"hover:bg-red-100"}),i(u),i(t),e(l,t)},code:l=>{var t=Ia(),s=r(t);C(s,()=>`<code class="language-html"><span class="token comment">&lt;!-- Hoverable rows --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">&#123;headers&#125;</span> <span class="token attr-name">&#123;data&#125;</span> <span class="token attr-name">&#123;keys&#125;</span> <span class="token attr-name">hover</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>&#123;true&#125;</span> <span class="token punctuation">/></span></span>
<span class="token comment">&lt;!-- Hoverable rows with custom classes --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">&#123;headers&#125;</span> <span class="token attr-name">&#123;data&#125;</span> <span class="token attr-name">&#123;keys&#125;</span> <span class="token attr-name">hover</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hover:bg-red-100<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code>`),i(t),e(l,t)},children:(l,t)=>{var s=Ya();D(2),e(l,s)},$$slots:{example:!0,code:!0,default:!0}})},$$slots:{default:!0}});var O=a(L,2);x(O,{title:"Customization",children:(k,T)=>{var d=Fa(),v=a(w(d),4);ka(v,{type:"warning",theme:"soft",children:(l,t)=>{var s=Va();e(l,s)},$$slots:{default:!0}}),D(2),e(k,d)},$$slots:{default:!0}});var W=a(O,2);x(W,{title:"Configuration",children:(k,T)=>{var d=Na(),v=w(d);J(v,{title:"Table",get component(){return $.component.table}});var l=a(v,2);J(l,{title:"Table Head",get component(){return $.component.thead}});var t=a(l,2);J(t,{title:"Table Body",get component(){return $.component.tbody}});var s=a(t,2);J(s,{title:"Table Row",get component(){return $.component.tr}}),e(k,d)},$$slots:{default:!0}}),e(K,A)}}),ta()}var Ga=p("<!> <!>",1);function cs(G,$){na($,!0);var h=Ga(),b=w(h);ma(b,{title:"Table"});var f=a(b,2);Ja(f,{get component(){return $.data.component},get edit_url(){return $.data.editURL}}),e(G,h),ta()}export{cs as component};
