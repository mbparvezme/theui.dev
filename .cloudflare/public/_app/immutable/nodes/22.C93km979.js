import{f as o,a as t}from"../chunks/CIHljEz0.js";import{p as V,f as k,a as W,s as e,n as R,c as g,r as v,$ as K,a2 as M,t as Q}from"../chunks/DDSqhxMg.js";import{h as _}from"../chunks/CEkn2uFW.js";import{s as f}from"../chunks/DPKhHaWt.js";import{D as X,H as Z,B as h,p as u}from"../chunks/BNTF0WTh.js";import"../chunks/CciAC_Fd.js";import{E as b,C as aa}from"../chunks/CyT2BtQZ.js";import{N as ea}from"../chunks/Da-JRmej.js";import{S as ta}from"../chunks/BmOsGaYy.js";var oa=o('<a>About</a> <a>Example</a> <a>Position</a> <a>Notification type</a> <a>Theme</a> <a class="ps-4">Soft color theme</a> <a class="ps-4">Gradient theme</a> <a>Variant</a> <a>Duration</a> <a>Remove on click</a> <a>Customization</a> <a>notify() function</a> <a>Accessibility</a> <a>Configuration</a>',1),sa=o('<p class="not-prose">This component is ideal for showing temporary messages such as success alerts, error messages, or status updates. It supports customization options, including different colors, positions, icons, and auto-dismiss settings. Whether you need to notify users about form submissions, system errors, or background processes, the Notification (Toast) component offers a flexible and efficient solution.</p>'),na=o('<pre class="language-html"><!></pre>'),ia=o('<iframe src="/example/notification-example" style="width: 100%; height: 210px; overflow:scroll" scrolling="no"></iframe>'),ra=o('<pre class="language-html"><!></pre>'),ca=o('<p class="not-prose">To use the <code>Notification</code> component, you need to add it once in your application. The recommended place is <code>+layout.svelte</code> to ensure it is available throughout your app, but you can place it anywhere suitable.</p> <!> <p class="not-prose">Once added, you can trigger notifications anywhere in your app using the <code>notify</code> function.</p> <!> <p class="not-prose">This will display a simple notification with the message <b>"Hello world!"</b>.</p>',1),pa=o('<iframe src="/example/notification-position" style="width: 100%; height: 210px;" scrolling="no"></iframe>'),la=o('<pre class="language-html"><!></pre>'),da=o('<p class="not-prose">By default the notification will appears at the top-end corner of the display. But you can change it using the <code>position</code> prop in the <code>Notification</code> component. The available value of the position prop are <code>"top-end"</code>, <code>"top-center"</code>, <code>"top-start"</code>, <code>"bottom-end"</code>, <code>"bottom-center"</code>, and <code>"bottom-start"</code>. Default value is <code>"top-end"</code>.</p> <!>',1),ua=o('<iframe src="/example/notification-type" style="width: 100%; height: 260px;" scrolling="no"></iframe>'),fa=o('<pre class="language-js"><!></pre>'),ma=o('<p class="not-prose">The <code>notify</code> function accept some parameters along with the message. You have to pass the message as the first parameter. The second parameter defines the type of the notification. Basically it changes the color based on the type. The available types are <code>"error"</code>, <code>"info"</code>, <code>"success"</code>, and <code>"warning"</code>. The default value is <code>"error"</code>.</p> <!>',1),ha=o('<iframe src="/example/notification-theme-soft" style="width: 100%; height: 260px;" scrolling="no"></iframe>'),ga=o('<pre class="language-js"><!></pre>'),va=o(`<p class="not-prose">With the <code>'soft'</code> theme, notifications adopt a gentle color scheme, making them blend seamlessly into minimalistic interfaces.</p>`),ka=o('<iframe src="/example/notification-theme-gradient" style="width: 100%; height: 260px;" scrolling="no"></iframe>'),ya=o('<pre class="language-js"><!></pre>'),_a=o(`<p class="not-prose">The <code>'gradient'</code> theme applies a lively blend of colors, giving notifications a more modern and attention-grabbing style.</p>`),ba=o(`<p class="not-prose">You can control the background color of the notifications with the <code>theme</code> prop. It supports three options: <code>'default'</code>, <code>'soft'</code>, and <code>'gradient'</code>. The <code>'default'</code> theme follows the standard notification styling, the <code>'soft'</code> theme provides a softer color palette for a more subtle look, and the <code>'gradient'</code> theme introduces a bold, eye-catching background with smooth color transitions.</p> <div><!> <!></div>`,1),$a=o('<iframe src="/example/notification-variant" style="width: 100%; height: 260px;" scrolling="no"></iframe>'),wa=o('<pre class="language-js"><!></pre>'),xa=o(`<p class="not-prose">The <code>'variant'</code> property allows you to change the visual style of the notification while keeping it minimal. There are four available variants: <code>'card'</code>, <code>'barTop'</code>, <code>'barBottom'</code>, and <code>'barStart'</code>.</p> <p class="not-prose">The default variant, <code>'card'</code>, follows a standard notification style without extra elements. The other three variants — <code>'barTop'</code>, <code>'barBottom'</code>, and <code>'barStart'</code> — add a thin line to the respective side of the notification. This subtle design change helps visually distinguish notifications without making them too complex.</p> <p class="not-prose">For example, using <code>barTop</code> will place a small line at the top of the notification, while <code>barBottom</code> and <code>barStart</code> will do the same for the bottom and start (left in LTR layouts, right in RTL layouts).</p> <!>`,1),Ta=o('<iframe src="/example/notification-duration" style="width: 100%; height: 260px;" scrolling="no"></iframe>'),Na=o('<pre class="language-js"><!></pre>'),Da=o('<p class="not-prose">The <code>removeAfter</code> property controls how long a notification remains visible before closing automatically. It accepts an integer value in milliseconds, starting from 0.</p> <ul class="my-0"><li>The <b>default duration is 5000ms</b> (5 seconds), meaning notifications disappear after this time.</li> <li>Setting it to <b>0</b> keeps the notification open indefinitely until manually closed.</li></ul>',1),Pa=o('<iframe src="/example/notification-click" style="width: 100%; height: 260px;" scrolling="no"></iframe>'),Ca=o('<pre class="language-js"><!></pre>'),ja=o('<p class="not-prose">By default, notifications close when clicked. You can change this behavior using the <code>removeOnClick</code> property in the options object. When set to <code>true</code> (default), clicking the notification will dismiss it. If set to <code>false</code>, the notification will remain visible even when clicked.</p> <!>',1),Aa=o(`<p class="not-prose">The <code>notify</code> function displays notifications with customizable options. It accepts three parameters:</p> <ul class="my-0"><li><strong>msg</strong> (type string) – The message displayed in the notification.</li> <li><span class="not-prose"><strong>type</strong> (type <a href="/docs/types#notification-types"><u class="decoration-wavy decoration-1 underline-offset-1">NOTIFICATION_TYPE</u></a>) – Defines the notification style. Options: <code>'error'</code>, <code>'info'</code>, <code>'success'</code>, and <code>'warning'</code>.<br/>- Default is <code>'error'</code>.</span></li> <li><span class="not-prose"><strong>config</strong> (type <a href="/docs/types#notification-configuration"><u class="decoration-wavy decoration-1 underline-offset-1">NOTIFY_CONFIG</u></a>) – An optional object to configure the notification’s behavior and appearance.</span></li></ul> <div><h4 class="my-0">Configuration Options</h4> <ul class="my-0"><li><span class="not-prose"><strong>removeAfter</strong> (type number) – Duration in milliseconds before the notification disappears. Set to <code>0</code> for persistent notifications.<br/>- Default is <code>5000</code>.</span></li> <li><span class="not-prose"><strong>removeOnClick</strong> (type boolean) – Determines if the notification should close when clicked.<br/>- Default is <code>true</code>.</span></li> <li><span class="not-prose"><strong>rounded</strong> (type <a href="/docs/types#common-types"><u class="decoration-wavy decoration-1 underline-offset-1">ROUNDED</u></a>) – Controls the border radius.<br/>- Default is <code>'md'</code>.</span></li> <li><span class="not-prose"><strong>theme</strong> (type string) – Sets the notification theme. Options: <code>'default'</code>, <code>'soft'</code>, <code>'gradient'</code>.<br/>- Default is <code>'default'</code>.</span></li> <li><span class="not-prose"><strong>variant</strong> (type string) – Defines the notification style. Options: <code>'card'</code>, <code>'barTop'</code>, <code>'barBottom'</code>, <code>'barStart'</code>.<br/>- Default is <code>'card'</code>.</span></li></ul></div>`,1),Oa=o(`<p class="not-prose">The Alert component is built with accessibility in mind, handling all necessary ARIA attributes, including <code>role="alert"</code> and <code>aria-label="Close alert"</code>, to ensure compatibility with assistive technologies. These attributes are automatically applied, so you don't need to configure them manually.</p> <p class="not-prose font-bold">The only consideration required is maintaining proper color contrast for the alert's text and background to ensure readability and compliance with accessibility standards.</p>`,1),Ia=o("<!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!>",1),Ba=o("<!> <!>",1);function Sa(Y,$){V($,!0);var w=Ba(),x=k(w);ea(x,{});var z=e(x,2);X(z,{sidebar:F=>{var G=oa(),T=k(G),N=e(T,2),D=e(N,2),P=e(D,2),C=e(P,2),j=e(C,2),A=e(j,2),O=e(A,2),I=e(O,2),B=e(I,2),S=e(B,2),E=e(S,2),H=e(E,2),L=e(H,2);Q((r,m,n,p,l,d,i,a,s,c,y,q,U,J)=>{f(T,"href",r),f(N,"href",m),f(D,"href",n),f(P,"href",p),f(C,"href",l),f(j,"href",d),f(A,"href",i),f(O,"href",a),f(I,"href",s),f(B,"href",c),f(S,"href",y),f(E,"href",q),f(H,"href",U),f(L,"href",J)},[()=>u("About"),()=>u("Example"),()=>u("Notification Position"),()=>u("Notification Type"),()=>u("Notification Theme"),()=>u("Soft Theme"),()=>u("Gradient Theme"),()=>u("Notification Variant"),()=>u("Notification Duration"),()=>u("Remove On Click"),()=>u("Customization"),()=>u("notify-function"),()=>u("Accessibility"),()=>u("Configuration")]),t(F,G)},children:(F,G)=>{var T=Ia(),N=k(T);Z(N,{title:"Notification",text:"A lightweight way to display temporary messages without interrupting the user experience. It appears briefly, disappears automatically, and is fully customizable.",get edit_url(){return $.edit_url}});var D=e(N,2);h(D,{title:"About",children:(r,m)=>{var n=sa();t(r,n)},$$slots:{default:!0}});var P=e(D,2);h(P,{title:"Example",children:(r,m)=>{var n=ca(),p=e(k(n),2);b(p,{codeTitle:"+layout.svelte",code:i=>{var a=na(),s=g(a);_(s,()=>`<code class="language-html">
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Notification <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"theui-svelte"</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token comment">&lt;!-- Add Notification component once, ideally in +layout.svelte --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Notification</span> <span class="token punctuation">/></span></span></code>`),v(a),t(i,a)},$$slots:{code:!0}});var l=e(p,4);b(l,{codeTitle:"routes/any/path/+page.svelte",example:a=>{var s=ia();t(a,s)},code:a=>{var s=ra(),c=g(s);_(c,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> notify <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"theui-svelte"</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token comment">&lt;!-- Trigger the notifications --></span>
&lt;Button
  onclick=&#123;
    () => notify("Hello world!")
  &#125;
>Notify<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span></code>`),v(s),t(a,s)},$$slots:{example:!0,code:!0}}),R(2),t(r,n)},$$slots:{default:!0}});var C=e(P,2);h(C,{title:"Notification Position",children:(r,m)=>{var n=da(),p=e(k(n),2);b(p,{example:i=>{var a=pa();t(i,a)},code:i=>{var a=la(),s=g(a);_(s,()=>'<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Notification</span> <span class="token attr-name">position</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottom-end<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code>'),v(a),t(i,a)},$$slots:{example:!0,code:!0}}),t(r,n)},$$slots:{default:!0}});var j=e(C,2);h(j,{title:"Notification Type",children:(r,m)=>{var n=ma(),p=e(k(n),2);b(p,{example:i=>{var a=ua();t(i,a)},code:i=>{var a=fa(),s=g(a);_(s,()=>'<code class="language-js"><span class="token function">notify</span><span class="token punctuation">(</span><span class="token string">"Hello world!"</span><span class="token punctuation">,</span> <span class="token string">"success"</span><span class="token punctuation">)</span> <span class="token comment">// You can replace "success" with any message type!</span></code>'),v(a),t(i,a)},$$slots:{example:!0,code:!0}}),t(r,n)},$$slots:{default:!0}});var A=e(j,2);h(A,{title:"Notification Theme",children:(r,m)=>{var n=ba(),p=e(k(n),2),l=g(p);b(l,{title:"Soft Theme",example:s=>{var c=ha();t(s,c)},code:s=>{var c=ga(),y=g(c);_(y,()=>'<code class="language-js"><span class="token function">notify</span><span class="token punctuation">(</span> <span class="token string">"Hello world!"</span><span class="token punctuation">,</span> <span class="token string">"success"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token string">"soft"</span><span class="token punctuation">&#125;</span> <span class="token punctuation">)</span></code>'),v(c),t(s,c)},children:(s,c)=>{var y=va();t(s,y)},$$slots:{example:!0,code:!0,default:!0}});var d=e(l,2);b(d,{title:"Gradient Theme",example:s=>{var c=ka();t(s,c)},code:s=>{var c=ya(),y=g(c);_(y,()=>'<code class="language-js"><span class="token function">notify</span><span class="token punctuation">(</span> <span class="token string">"Hello world!"</span><span class="token punctuation">,</span> <span class="token string">"success"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token string">"gradient"</span><span class="token punctuation">&#125;</span> <span class="token punctuation">)</span></code>'),v(c),t(s,c)},children:(s,c)=>{var y=_a();t(s,y)},$$slots:{example:!0,code:!0,default:!0}}),v(p),t(r,n)},$$slots:{default:!0}});var O=e(A,2);h(O,{title:"Notification Variant",children:(r,m)=>{var n=xa(),p=e(k(n),6);b(p,{example:i=>{var a=$a();t(i,a)},code:i=>{var a=wa(),s=g(a);_(s,()=>'<code class="language-js"><span class="token function">notify</span><span class="token punctuation">(</span><span class="token string">"Hello world!"</span><span class="token punctuation">,</span> <span class="token string">"success"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token string">"soft"</span><span class="token punctuation">,</span> <span class="token literal-property property">variant</span><span class="token operator">:</span> <span class="token string">"borderTop"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>'),v(a),t(i,a)},$$slots:{example:!0,code:!0}}),t(r,n)},$$slots:{default:!0}});var I=e(O,2);h(I,{title:"Notification Duration",children:(r,m)=>{b(r,{example:l=>{var d=Ta();t(l,d)},code:l=>{var d=Na(),i=g(d);_(i,()=>'<code class="language-js"><span class="token function">notify</span><span class="token punctuation">(</span><span class="token string">"Hello world!"</span><span class="token punctuation">,</span> <span class="token string">"error"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">removeAfter</span><span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>'),v(d),t(l,d)},children:(l,d)=>{var i=Da();R(2),t(l,i)},$$slots:{example:!0,code:!0,default:!0}})},$$slots:{default:!0}});var B=e(I,2);h(B,{title:"Remove On Click",children:(r,m)=>{var n=ja(),p=e(k(n),2);b(p,{example:i=>{var a=Pa();t(i,a)},code:i=>{var a=Ca(),s=g(a);_(s,()=>'<code class="language-js"><span class="token function">notify</span><span class="token punctuation">(</span><span class="token string">"Hello world!"</span><span class="token punctuation">,</span> <span class="token string">"error"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">removeOnClick</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>'),v(a),t(i,a)},$$slots:{example:!0,code:!0}}),t(r,n)},$$slots:{default:!0}});var S=e(B,2);const E=M(()=>u("notify-function",!1));h(S,{get id(){return K(E)},title:"notify() Function",children:(r,m)=>{var n=Aa();R(4),t(r,n)},$$slots:{default:!0}});var H=e(S,2);h(H,{title:"Accessibility",children:(r,m)=>{var n=Oa();R(2),t(r,n)},$$slots:{default:!0}});var L=e(H,2);h(L,{title:"Configuration",children:(r,m)=>{aa(r,{get component(){return $.component}})},$$slots:{default:!0}}),t(F,T)}}),t(Y,w),W()}var Ha=o("<!> <!>",1);function Ua(Y,$){V($,!0);var w=Ha(),x=k(w);ta(x,{title:"Notification"});var z=e(x,2);Sa(z,{get component(){return $.data.component},get edit_url(){return $.data.editURL}}),t(Y,w),W()}export{Ua as component};
