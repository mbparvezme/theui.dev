import{f as p,a as t,t as f}from"../chunks/CIHljEz0.js";import{p as L,a as M,f as $,s,n as h,c as b,r as _,t as J}from"../chunks/DDSqhxMg.js";import{h as P}from"../chunks/CEkn2uFW.js";import{s as d}from"../chunks/DPKhHaWt.js";import{D as Q,H as V,B as w,p as k}from"../chunks/BNTF0WTh.js";import"../chunks/CciAC_Fd.js";import{E,C as X}from"../chunks/CyT2BtQZ.js";import{B as x}from"../chunks/3YiXWGZ2.js";import{S as Z}from"../chunks/BmOsGaYy.js";var aa=p('<a>About</a> <a>Example</a> <a>Trigger Event</a> <a class="ps-4">Entry Popup</a> <a class="ps-4">Exit Popup</a> <a class="ps-4">Both Entry-Exit Popup</a> <a>Popup Repetition</a> <a>Popup Backdrop</a> <a class="ps-4">Static Backdrop</a> <a class="ps-4">Backdrop Customization</a> <a>Rounded Corners</a> <a>Customization</a> <a>Accessibility</a> <a>Configuration</a>',1),ta=p('<p class="not-prose">The <b>Popup</b> component provides flexible control over when and how it appears. You can trigger it on page <b>entry</b>, <b>exit</b>, or <b>both</b> using the <code>trigger</code> prop. The content of the popup can be customized separately for entry (<code>entryContent</code>) and exit (<code>exitContent</code>). You can also control whether it repeats on every visit, how the backdrop behaves, and apply custom styles.</p>'),ea=p('<pre class="language-html"><!></pre>'),sa=p('<p class="not-prose">The following examples show how to use the Popup component with different triggers and content configurations. You can display a popup when the page loads (onEntry), when the user tries to leave (onExit), or for both events (onEntryExit).</p> <!>',1),na=p('<pre class="language-html"><!></pre>'),oa=p(`<p class="not-prose">When <code>trigger</code> is set to <code>'onEntry'</code>, the popup will automatically appear as soon as the page loads. No user interaction is needed to trigger it.</p>`),pa=p('<pre class="language-html"><!></pre>'),ra=p(`<p class="not-prose">With <code>trigger</code> set to <code>'onExit'</code>, the popup will appear when the user moves their cursor toward the browser’s close button or attempts to leave the page.</p>`),ca=p('<pre class="language-html"><!></pre>'),la=p(`<p class="not-prose">Setting <code>trigger</code> to <code>'onEntryExit'</code> will make the popup appear both when the page loads and when the user tries to exit. It combines the behaviors of <code>'onEntry'</code> and <code>'onExit'</code>.</p>`),ua=p('<pre class="language-html"><!></pre>'),ia=p(`<p class="not-prose">The <code>trigger</code> prop defines when the Popup appears. It supports three values: <code>'onEntry'</code>, <code>'onExit'</code>, and <code>'onEntryExit'</code>. The default value is <code>'onEntry'</code>.</p> <!> <!> <!> <p class="not-prose">Above example will display same content on entry and exit popup! But if you want, you can provide separate content for both entry and exit popup using the <code>entryContent</code> and <code>exitContent</code> snippet.</p> <!>`,1),da=p(`<div><p class="not-prose">The <code>repeat</code> prop controls how often the Popup appears. It accepts three values: <code>true</code>, <code>false</code>, and <code>'page'</code>. The default value is <code>true</code>.</p> <ul class="my-0"><li><span class="not-prose"><code>true</code></span> - The popup will appear every time the page loads, even if the user reloads the same page. This is the default behavior.</li> <li><span class="not-prose"><code>false</code></span> - The popup will appear only once, and it won’t show again, even if the user navigates to a different page.</li> <li><span class="not-prose"><code>'page'</code></span> - The popup will appear once per page. If the user moves to another page, it will show again, but it won’t repeat on the same page.</li></ul></div> <p class="not-prose">This feature allows precise control over popup behavior across pages. For example, to display the popup only once per visitor, set <code></code>. To show the popup once per page the visitor visits, set <code>repeat="page"</code>.</p>`,1),ka=p('<pre class="language-html"><!></pre>'),ha=p('<p class="not-prose">The <code>staticBackdrop</code> prop controls whether the Popup closes when clicking on the backdrop. By default, the backdrop is clickable, and clicking it will close the Popup. Setting <code>staticBackdrop</code> to <code>true</code> makes the backdrop static, meaning the Modal will remain open even when the backdrop is clicked.</p>'),ga=p("<!> <!>",1),ma=p('<pre class="language-html"><!></pre>'),va=p('<p class="not-prose">The <code>backdrop</code> prop manages the visibility and style of the backdrop. When set to <code>true</code> (default), the backdrop is visible. If set to <code>false</code>, the backdrop will be hidden. You can also customize the backdrop by passing custom CSS classes, which will apply directly to the backdrop.</p>'),fa=p("<!> <!>",1),ba=p('<pre class="language-html"><!></pre>'),_a=p('<p class="not-prose">TThe <code>rounded</code> prop controls the corner radius of the Popup, ensuring design consistency. While custom CSS classes can be used for styling, this prop provides a standardized way to apply consistent rounding across the component. Available values are: <code>none</code>, <code>sm</code>, <code>md</code>, <code>lg</code>, <code>xl</code>, and <code>full</code>. Default value <code>md</code>.</p> <!>',1),xa=p('<pre class="language-html"><!></pre>'),$a=p('<p class="not-prose">You can pass your custom classes to the <code>Popup</code> component using the <code>class</code> attribute. These classes directly applies to the popup component.</p> <!>',1),ya=p(`<div><p class="not-prose">The Alert <code>Popup</code> component is designed to be accessible for all users, including those with disabilities. Here's how it works:</p> <ul class="my-0"><li><b>Focus Management</b>: When the popup opens, focus will automatically go to the first clickable element inside it, such as the close button, allowing keyboard users to interact with it right away.</li> <li><b>Keyboard Navigation</b>: You can use the <kbd>Tab</kbd> key to move through the popup and the <kbd>Esc</kbd> key to close it, making it easy to navigate with a keyboard.</li> <li><b>Aria Roles</b>: The popup has <b>aria-labelledby</b> for screen readers to announce the title and <span class="not-prose"><code>role="dialog"</code></span> to let users know it's a modal window.</li> <li><b>Backdrop Handling</b>: When the popup is open, the backdrop is hidden from screen readers, so users can focus on the popup content.</li> <li><b>Custom Content</b>: The <span class="not-prose"><code>entryContent</code></span> and <span class="not-prose"><code>exitContent</code></span> props allow you to add any content you need, ensuring it's clear for screen readers.</li></ul></div> <p class="not-prose">The <b>Popup</b> is built to work well with screen readers and keyboard navigation, making sure everyone can use it comfortably.</p>`,1),Pa=p("<!> <!> <!> <!> <!> <!> <!> <!> <!> <!>",1);function wa(j,T){L(T,!0),Q(j,{sidebar:C=>{var B=aa(),I=$(B),q=s(I,2),A=s(q,2),S=s(A,2),z=s(S,2),O=s(z,2),R=s(O,2),W=s(R,2),Y=s(W,2),H=s(Y,2),N=s(H,2),l=s(N,2),g=s(l,2),r=s(g,2);J((i,m,y,u,e,o,a,n,c,v,D,K,U,G)=>{d(I,"href",i),d(q,"href",m),d(A,"href",y),d(S,"href",u),d(z,"href",e),d(O,"href",o),d(R,"href",a),d(W,"href",n),d(Y,"href",c),d(H,"href",v),d(N,"href",D),d(l,"href",K),d(g,"href",U),d(r,"href",G)},[()=>k("About"),()=>k("Example"),()=>k("Trigger Event"),()=>k("Entry Popup"),()=>k("Exit Popup"),()=>k("Both Entry-Exit Popup"),()=>k("Popup Repetition"),()=>k("Popup Backdrop"),()=>k("Static Backdrop"),()=>k("Backdrop Customization"),()=>k("Rounded Corners"),()=>k("Customization"),()=>k("Accessibility"),()=>k("Configuration")]),t(C,B)},children:(C,B)=>{var I=Pa(),q=$(I);V(q,{title:"Popup",text:"A special type of modal that can be triggered when the page loads (Enter Popup) or when the user tries to leave the page (Exit Popup). This makes it ideal for welcome messages, promotions, or exit-intent offers.",get edit_url(){return T.edit_url}});var A=s(q,2);w(A,{title:"About",children:(l,g)=>{var r=ta();t(l,r)},$$slots:{default:!0}});var S=s(A,2);w(S,{title:"Example",children:(l,g)=>{var r=sa(),i=s($(r),2);E(i,{example:u=>{x(u,{newTabIcon:!0,target:"_blank",href:"/example/popup-example",children:(e,o)=>{h();var a=f("Open example");t(e,a)},$$slots:{default:!0}})},code:u=>{var e=ea(),o=b(e);P(o,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Popup <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"theui-svelte"</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Popup</span><span class="token punctuation">></span></span>
  Hello! I'm popup!
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Popup</span><span class="token punctuation">></span></span></code>`),_(e),t(u,e)},$$slots:{example:!0,code:!0}}),t(l,r)},$$slots:{default:!0}});var z=s(S,2);w(z,{title:"Trigger Event",children:(l,g)=>{var r=ia(),i=s($(r),2);E(i,{title:"Entry Popup",example:a=>{x(a,{newTabIcon:!0,target:"_blank",href:"/example/popup-entry",children:(n,c)=>{h();var v=f("Open example");t(n,v)},$$slots:{default:!0}})},code:a=>{var n=na(),c=b(n);P(c,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Popup</span> <span class="token attr-name">trigger</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onEntry<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token comment">&lt;!-- Or just &lt;Popup> as onEntry is default --></span>
  This is entry popup!
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Popup</span><span class="token punctuation">></span></span></code>`),_(n),t(a,n)},children:(a,n)=>{var c=oa();t(a,c)},$$slots:{example:!0,code:!0,default:!0}});var m=s(i,2);E(m,{title:"Exit Popup",example:a=>{x(a,{newTabIcon:!0,target:"_blank",href:"/example/popup-exit",children:(n,c)=>{h();var v=f("Open example");t(n,v)},$$slots:{default:!0}})},code:a=>{var n=pa(),c=b(n);P(c,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Popup</span> <span class="token attr-name">trigger</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onExit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  This is exit popup!
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Popup</span><span class="token punctuation">></span></span></code>`),_(n),t(a,n)},children:(a,n)=>{var c=ra();t(a,c)},$$slots:{example:!0,code:!0,default:!0}});var y=s(m,2);E(y,{title:"Both Entry-Exit Popup",example:a=>{x(a,{newTabIcon:!0,target:"_blank",href:"/example/popup-entry-exit",children:(n,c)=>{h();var v=f("Open example");t(n,v)},$$slots:{default:!0}})},code:a=>{var n=ca(),c=b(n);P(c,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Popup</span> <span class="token attr-name">trigger</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onEntryExit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  The popup appears in both entry and exit time!
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Popup</span><span class="token punctuation">></span></span></code>`),_(n),t(a,n)},children:(a,n)=>{var c=la();t(a,c)},$$slots:{example:!0,code:!0,default:!0}});var u=s(y,4);E(u,{example:a=>{x(a,{newTabIcon:!0,target:"_blank",href:"/example/popup-entry-exit-snippet",children:(n,c)=>{h();var v=f("Open example");t(n,v)},$$slots:{default:!0}})},code:a=>{var n=ua(),c=b(n);P(c,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Popup</span> <span class="token attr-name">trigger</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onEntryExit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  &#123;#snippet entryContent()&#125;
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-success-500 font-bold<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>I'm content from entry popup!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
  &#123;/snippet&#125;

  &#123;#snippet exitContent()&#125;
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-error-500 font-bold<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>I'm content from exit popup!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
  &#123;/snippet&#125;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Popup</span><span class="token punctuation">></span></span></code>`),_(n),t(a,n)},$$slots:{example:!0,code:!0}}),t(l,r)},$$slots:{default:!0}});var O=s(z,2);w(O,{title:"Popup Repetition",children:(l,g)=>{var r=da(),i=s($(r),2),m=s(b(i));m.textContent="repeat={false}",h(3),_(i),t(l,r)},$$slots:{default:!0}});var R=s(O,2);w(R,{title:"Popup Backdrop",children:(l,g)=>{var r=fa(),i=$(r);E(i,{title:"Static Backdrop",example:e=>{x(e,{newTabIcon:!0,target:"_blank",href:"/example/popup-static-backdrop",children:(o,a)=>{h();var n=f("Open example");t(o,n)},$$slots:{default:!0}})},code:e=>{var o=ka(),a=b(o);P(a,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Popup</span> <span class="token attr-name">staticBackdrop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>&#123;true&#125;</span><span class="token punctuation">></span></span>
  This popup has a static backdrop!
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Popup</span><span class="token punctuation">></span></span></code>`),_(o),t(e,o)},children:(e,o)=>{var a=ha();t(e,a)},$$slots:{example:!0,code:!0,default:!0}});var m=s(i,2);E(m,{title:"Backdrop Customization",example:e=>{var o=ga(),a=$(o);x(a,{newTabIcon:!0,target:"_blank",href:"/example/popup-backdrop-no",children:(c,v)=>{h();var D=f("No-backdrop example");t(c,D)},$$slots:{default:!0}});var n=s(a,2);x(n,{newTabIcon:!0,target:"_blank",href:"/example/popup-backdrop-custom",children:(c,v)=>{h();var D=f("Custom-backdrop example");t(c,D)},$$slots:{default:!0}}),t(e,o)},code:e=>{var o=ma(),a=b(o);P(a,()=>`<code class="language-html"><span class="token comment">&lt;!-- No backdrop --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Popup</span> <span class="token attr-name">backdrop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>&#123;false&#125;</span><span class="token punctuation">></span></span>
  This popup has no backdrop!
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Popup</span><span class="token punctuation">></span></span>

<span class="token comment">&lt;!-- Custom backdrop --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Popup</span> <span class="token attr-name">backdrop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bg-brand-primary-500/80<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  This popup has a custom backdrop!
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Popup</span><span class="token punctuation">></span></span></code>`),_(o),t(e,o)},children:(e,o)=>{var a=va();t(e,a)},$$slots:{example:!0,code:!0,default:!0}}),t(l,r)},$$slots:{default:!0}});var W=s(R,2);w(W,{title:"Rounded Corners",children:(l,g)=>{var r=_a(),i=s($(r),2);E(i,{example:u=>{x(u,{newTabIcon:!0,target:"_blank",href:"/example/popup-rounded-no",children:(e,o)=>{h();var a=f("Open example");t(e,a)},$$slots:{default:!0}})},code:u=>{var e=ba(),o=b(e);P(o,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Popup</span> <span class="token attr-name">rounded</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  This popup has no rounded corners!
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Popup</span><span class="token punctuation">></span></span></code>`),_(e),t(u,e)},$$slots:{example:!0,code:!0}}),t(l,r)},$$slots:{default:!0}});var Y=s(W,2);w(Y,{title:"Customization",children:(l,g)=>{var r=$a(),i=s($(r),2);E(i,{example:u=>{x(u,{newTabIcon:!0,target:"_blank",href:"/example/popup-customization",children:(e,o)=>{h();var a=f("Open example");t(e,a)},$$slots:{default:!0}})},code:u=>{var e=xa(),o=b(e);P(o,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Popup</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>border-4 border-brand-primary-200 bg-brand-primary-500 text-on-brand-primary-500<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  This is a custom popup with some extra classes!
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Popup</span><span class="token punctuation">></span></span></code>`),_(e),t(u,e)},$$slots:{example:!0,code:!0}}),t(l,r)},$$slots:{default:!0}});var H=s(Y,2);w(H,{title:"Accessibility",children:(l,g)=>{var r=ya();h(2),t(l,r)},$$slots:{default:!0}});var N=s(H,2);w(N,{title:"Configuration",children:(l,g)=>{X(l,{get component(){return T.component}})},$$slots:{default:!0}}),t(C,I)}}),M()}var Ea=p("<!> <!>",1);function Ra(j,T){L(T,!0);var F=Ea(),C=$(F);Z(C,{title:"Entry-Exit Popup"});var B=s(C,2);wa(B,{get component(){return T.data.component},get edit_url(){return T.data.editURL}}),t(j,F),M()}export{Ra as component};
