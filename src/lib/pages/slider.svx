---
title: Slider
category: Components
description: Navigate content sections easily with theui-svelte's Slider component for smooth UX.
dir: ".lib/pages"
tags: [slider, carousel, navigation, component, svelte, svelte-5, theui-svelte, component-library, ui, tailwindcss]
---

<script lang="ts">
  import DocLayout from "$lib/ui/doc/DocLayout.svelte";
  import DocHead from "$lib/ui/doc/Head.svelte";
  import DocBlock from "$lib/ui/doc/Block.svelte";
  import Code from "$lib/ui/doc/CodeBlock.svelte";
  import Example from "$lib/ui/doc/Example.svelte";
  import ConfigComponent from "$lib/ui/doc/ConfigComponent.svelte";
  import { processID, editURL } from "$lib";
  let { component }: {component: any } = $props();

  import {Slider, Slide, Svg} from "theui-svelte";
</script>

<DocLayout>
  <DocHead title="Slider" text="A versatile and interactive element for displaying images or content in a dynamic, scrollable format, enhancing user engagement with smooth transitions and customizable options." edit_url={editURL("slider")} />

  <DocBlock title="About">
    <p class="not-prose">The Slider component allows you to create visually appealing slideshows for images or content sections. It supports various configurations, including autoplay, navigation controls, and dynamic content loading. Highly customizable, it provides smooth animations and adaptive layouts for different screen sizes.</p>
  </DocBlock>

  <DocBlock title="Example">
    <p class="not-prose">The slider component is highly flexible and supports both images and custom content. You can configure its behavior using various props.</p>
    <Example title="Image Slider">
      <p class="not-prose">The slider can be used to display a series of images. Each <code>Slide</code> component represents an individual image.</p>
      {#snippet example()}
      <div class="w-full">
        <Slider>
          <Slide src="https://placehold.co/1600x700/73C7C7/white?text=Slide 1" alt="Image slide demo image" />
          <Slide src="https://placehold.co/1600x700/B5828C/white?text=Slide 2" alt="Image slide demo image" />
          <Slide src="https://placehold.co/1600x700/889E73/white?text=Slide 3" alt="Image slide demo image" />
        </Slider>
      </div>
      {/snippet}

      {#snippet code()}
```html
<Slider>
  <Slide src="..." alt="..." />
  <Slide src="..." alt="..." />
  <Slide src="..." alt="..." />
</Slider>
```
      {/snippet}
    </Example>
    <Example title="Custom Content Slider">
      <p class="not-prose">The slider is not limited to images; you can add any custom content inside the <code>Slide</code> component.</p>
      {#snippet example()}
      <div class="w-full">
        <Slider>
          <Slide>
            <div class="w-1/2 h-96 bg-yellow-200 flex items-center text-right pe-8">
              <h3 class="text-5xl leading-[1.25] tracking-tighter"><b>THEUI</b><br><small>COMPONENT LIBRARY</small></h3>
            </div>
            <div class="w-1/2 h-96 bg-green-200 flex items-center p-8">
              <p><b>Build Faster with theui-svelte</b><br>The theui-svelte component library is designed to help developers create modern, responsive, and highly customizable UI components with ease. From buttons and forms to advanced components like sliders and tooltips, our library ensures a smooth development experience with a focus on performance and accessibility.</p>
            </div>
          </Slide>
          <Slide>
            <div class="w-1/2 h-96 bg-rose-200 flex items-center text-right p-8">
              <p><b>Fully Customizable & Flexible</b><br>Every component in theui-svelte is built with customization in mind. Whether you need to tweak styles, change behavior, or extend functionality, our library provides flexible props and utility classes that integrate seamlessly with Tailwind CSS. No unnecessary dependencies, just clean and efficient code.</p>
            </div>
            <div class="w-1/2 h-96 bg-blue-200 flex items-center ps-8">
              <h3 class="text-5xl leading-[1.25] tracking-tighter"><b>THEUI</b><br><small>COMPONENT LIBRARY</small></h3>
            </div>
          </Slide>
          <Slide>
            <div class="w-1/2 h-96 bg-teal-200 flex items-center text-right pe-8">
              <h3 class="text-5xl leading-[1.25] tracking-tighter"><b>THEUI</b><br><small>COMPONENT LIBRARY</small></h3>
            </div>
            <div class="w-1/2 h-96 bg-orange-200 flex items-center p-8">
              <p><b>Accessibility at Its Core</b><br>Web accessibility isn’t an afterthought—it’s built into the foundation of theui-svelte. Each component follows best practices for ARIA roles, keyboard navigation, and screen reader support, ensuring an inclusive experience for all users.</p>
            </div>
          </Slide>
        </Slider>
      </div>
      {/snippet}

      {#snippet code()}
```html
<Slider>
  <Slide> <!-- Custom content --> </Slide>
  <Slide> <!-- Custom content --> </Slide>
  <Slide> <!-- Custom content --> </Slide>
</Slider>
```
      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Controls & Indicator">
    <p class="not-prose">The <code>controls</code> prop enables or disables navigation buttons for manually switching between slides. When set to <code>true</code>, users can navigate using previous and next buttons. The value <code>false</code> will hide the controls. Default is <code>true</code>.</p>
    <Example>
      <p class="not-prose">The <code>indicator</code> prop allows displaying small indicators (dots) representing each slide. When <code>true</code>, users can click on an indicator to jump to a specific slide. The value <code>false</code> will hide the indicator. Default is <code>true</code>.</p>
      {#snippet example()}
      <div class="w-full">
        <Slider indicator={false} controls={false}>
          <Slide src="https://placehold.co/1600x700/577BC1/white?text=Slide 1" alt="Image slide demo image" />
          <Slide src="https://placehold.co/1600x700/578E7E/white?text=Slide 2" alt="Image slide demo image" />
          <Slide src="https://placehold.co/1600x700/4DA1A9/white?text=Slide 3" alt="Image slide demo image" />
        </Slider>
      </div>
      {/snippet}

      {#snippet code()}
```html
<Slider indicator={false} controls={false}> ... </Slider>
```
      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Auto Play & Stop on Hover">
    <p class="not-prose">The <code>autoPlay</code> prop determines whether the slider should automatically transition between slides. When set to <code>true</code>, the slides will change automatically at a defined interval. Default is <code>true</code>.</p>
    <Example>
      <p class="not-prose">The <code>stopOnHover</code> prop controls whether the autoplay should pause when the user hovers over the slider. If enabled <code>true</code>, the slider will stop moving while hove73C7C7 and resume when the mouse leaves. Default is <code>true</code>.</p>
      {#snippet example()}
      <div class="w-full">
        <Slider stopOnHover={false}>
          <Slide src="https://placehold.co/1600x700/8174A0/white?text=Slide 1" alt="Image slide demo image" />
          <Slide src="https://placehold.co/1600x700/8EA3A6/white?text=Slide 2" alt="Image slide demo image" />
          <Slide src="https://placehold.co/1600x700/B59F78/white?text=Slide 3" alt="Image slide demo image" />
        </Slider>
      </div>
      {/snippet}

      {#snippet code()}
```html
<Slider stopOnHover={false}> ... </Slider>
```
      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Timer">
    <p class="not-prose">The <code>timer</code> prop enables a progress timer that visually represents the time left before transitioning to the next slide. If <code>false</code>, it wil hides the progress bar. Default is <code>true</code>.</p>
    <Example>
      {#snippet example()}
      <div class="w-full">
        <Slider timer={false}>
          <Slide src="https://placehold.co/1600x700/7ED4AD/white?text=Slide 1" alt="Image slide demo image" />
          <Slide src="https://placehold.co/1600x700/608BC1/white?text=Slide 2" alt="Image slide demo image" />
          <Slide src="https://placehold.co/1600x700/7AB2D3/white?text=Slide 3" alt="Image slide demo image" />
        </Slider>
      </div>
      {/snippet}

      {#snippet code()}
```html
<Slider timer={false}> ... </Slider>
```
      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Slide Duration">
    <p class="not-prose">The <code>slideDuration</code> prop defines the time (in milliseconds) each slide remains visible before transitioning to the next one. A higher value means slides stay longer. Default is <code>5000</code> (5 seconds).</p>
    <Example>
      {#snippet example()}
      <div class="w-full">
        <Slider slideDuration={2000}>
          <Slide src="https://placehold.co/1600x700/A19AD3/white?text=Slide 1" alt="Image slide demo image" />
          <Slide src="https://placehold.co/1600x700/5DB996/white?text=Slide 2" alt="Image slide demo image" />
          <Slide src="https://placehold.co/1600x700/81BFDA/white?text=Slide 3" alt="Image slide demo image" />
        </Slider>
      </div>
      {/snippet}

      {#snippet code()}
```html
<Slider slideDuration={2000}> ... </Slider>
```
      {/snippet}
    </Example>
    <p class="not-prose">In the example each slide will stay on the display for 2 second.</p>
  </DocBlock>

  <DocBlock title="Transition Duration">
    <p class="not-prose">The <code>transitionDuration</code> prop specifies the time (in milliseconds) taken for the transition effect between slides. It controls the smoothness of the animation. Default is <code>750</code> milliseconds.</p>
    <Example>
      {#snippet example()}
      <div class="w-full">
        <Slider transitionDuration={2000}>
          <Slide src="https://placehold.co/1600x700/8174A0/white?text=Slide 1" alt="Image slide demo image" />
          <Slide src="https://placehold.co/1600x700/8EA3A6/white?text=Slide 2" alt="Image slide demo image" />
          <Slide src="https://placehold.co/1600x700/B59F78/white?text=Slide 3" alt="Image slide demo image" />
        </Slider>
      </div>
      {/snippet}

      {#snippet code()}
```html
<Slider transitionDuration={2000}> ... </Slider>
```
      {/snippet}
    </Example>
    <p class="not-prose">In the example each transition will take 2 second to complete.</p>
  </DocBlock>

  <DocBlock title="Active Slide">
    <p class="not-prose">The <code>activeSlide</code> prop sets the initial slide that appears when the slider loads. The value corresponds to the slide number. Default is <code>1</code>.</p>
    <Example>
      {#snippet example()}
      <div class="w-full">
        <Slider activeSlide={2}>
          <Slide src="https://placehold.co/1600x700/8174A0/white?text=Slide 1" alt="Image slide demo image" />
          <Slide src="https://placehold.co/1600x700/8EA3A6/white?text=Slide 2" alt="Image slide demo image" />
          <Slide src="https://placehold.co/1600x700/B59F78/white?text=Slide 3" alt="Image slide demo image" />
        </Slider>
      </div>
      {/snippet}

      {#snippet code()}
```html
<Slider activeSlide={2}> ... </Slider>
```
      {/snippet}
    </Example>
    <p class="not-prose">This image slide will set slide 2 as the initial slide.</p>
  </DocBlock>

  <DocBlock title="Custom Controls Icon">
    <p class="not-prose">Use change the icon in the previous slide and next slide control button using the <code>prevButton</code> and <code>nextButton</code> snippet like below.</p>
    <Example>
      {#snippet example()}
      <div class="w-full">
        <Slider>
          {#snippet prevButton()}
            <Svg size={2} class="opacity-50">
              <path fill-rule="evenodd" d="M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8m15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-4.5-.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5z"/>
            </Svg>
          {/snippet}
          {#snippet nextButton()}
            <Svg size={2} class="opacity-50">
              <path fill-rule="evenodd" d="M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8m15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0M4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5z"/>
            </Svg>
          {/snippet}
          <Slide src="https://placehold.co/1600x700/A19AD3/white?text=Slide 1" alt="Image slide demo image" />
          <Slide src="https://placehold.co/1600x700/608BC1/white?text=Slide 2" alt="Image slide demo image" />
          <Slide src="https://placehold.co/1600x700/889E73/white?text=Slide 3" alt="Image slide demo image" />
        </Slider>
      </div>
      {/snippet}

      {#snippet code()}
```html
<Slider>
  <!-- Previous button -->
  {#snippet prevButton()}
    <Svg size={2} class="opacity-50">
      <path fill-rule="evenodd" d="M1 8a7 7 0 1 ... 1 .708.708L5.707 7.5z"/>
    </Svg>
  {/snippet}
  <!-- Previous button -->
  {#snippet nextButton()}
    <Svg size={2} class="opacity-50">
      <path fill-rule="evenodd" d="M6.776 1.553a.5.5 0 ... 0 1 .223-.671"/>
    </Svg>
  {/snippet}

  <Slide src="..." alt="..." />
  <Slide src="..." alt="..." />
  <Slide src="..." alt="..." />
</Slider>
```
      {/snippet}
    </Example>
    <p class="not-prose">This image slide will set slide 2 as the initial slide.</p>
  </DocBlock>

  <DocBlock title="Customization">
    <div>
      <p class="not-prose">The Image Slider provides several props for customizing its appearance. These props allow you to apply custom styles to different parts of the slider.</p>
      <ul class="my-0">
        <li><span class="not-prose"><code>slideClasses</code></span>: Applies custom classes to each slide. This allows you to adjust styling such as padding, margins, background, or borders.</li>
        <li><span class="not-prose"><code>controlButtonClasses</code></span>: Defines custom styles for the navigation buttons (previous and next). You can modify their size, color, or position to match your design.</li>
        <li><span class="not-prose"><code>indicatorContainerClasses</code></span>: Applies styles to the container that holds the slide indicators. This is useful for adjusting positioning, spacing, or background styles.</li>
        <li><span class="not-prose"><code>indicatorClasses</code></span>: Customizes the appearance of each slide indicator (dot or other elements). You can modify the shape, size, and color.</li>
        <li><span class="not-prose"><code>indicatorActiveClasses</code></span>: Defines styles for the active indicator. This allows you to highlight the currently active slide differently from the others.</li>
        <li><span class="not-prose"><code>indicatorActiveClasses</code></span>: Applies styles to the timer, which indicates slide progress. You can change its size, color, or animation effects.</li>
      </ul>
    </div>
    <p class="not-prose">By using these props, you can fully customize the slider to fit your design needs.</p>
  </DocBlock>

  <DocBlock title="Accessibility">
    <p class="not-prose">The Slider component is designed to be accessible, ensuring smooth navigation and usability for all users, including those using assistive technologies.</p>
    <div>
      <h4 class="my-0">Keyboard Navigation</h4>
      <p class="not-prose">The slider supports full keyboard interaction:</p>
      <ul class="my-0">
        <li>Left Arrow (⬅) moves to the previous slide.</li>
        <li>Right Arrow (➡) moves to the next slide.</li>
        <li>Tab ( <kbd>↹</kbd> ) navigates through focusable elements such as controls and indicators.</li>
        <li>Enter ( <kbd>⏎</kbd> ) or Space ( <kbd>⎵</kbd> ) activates the selected indicator when applicable.</li>
      </ul>
    </div>
    <div>
      <h4 class="my-0">Screen Reader Support</h4>
      <p class="not-prose">To ensure compatibility with screen readers, the following attributes are applied:</p>
      <ul class="my-0">
        <li>The slider container includes <span class="not-prose"><code>aria-live="polite"</code></span> so screen readers announce slide changes dynamically.</li>
        <li>Each slide has <span class="not-prose"><code>aria-hidden="true"</code></span> when inactive and <span class="not-prose"><code>aria-hidden="false"</code></span> when active.</li>
      </ul>
    </div>
    <div>
      <h4 class="my-0">Accessible Controls</h4>
      <p class="not-prose">Navigation buttons and indicators are labeled to enhance usability:</p>
      <ul class="my-0">
        <li>The Previous and Next buttons should have <span class="not-prose"><code>aria-label="Previous Slide"</code></span> and <span class="not-prose"><code>aria-label="Next Slide"</code></span>, respectively.</li>
        <li>Indicators should include <span class="not-prose"><code>aria-label="Go to slide X"</code></span> to indicate their function.</li>
      </ul>
    </div>
    <p class="not-prose">These accessibility features ensure a seamless experience for all users, making the Slider component more inclusive and user-friendly.</p>
  </DocBlock>

  <DocBlock title="Configuration">
    <ConfigComponent component={component} />
  </DocBlock>
 
  {#snippet sidebar()}
    <a href={processID("About")}>About</a>
    <a href={processID("Example")}>Example</a>
    <a href={processID("Image Slider")} class="ps-4">Image slide</a>
    <a href={processID("Custom Content Slider")} class="ps-4">Content slide</a>
    <a href={processID("Controls & Indicator")}>Controls & Indicator</a>
    <a href={processID("Auto Play & Stop on Hover")}>Auto Play & Stop on Hover</a>
    <a href={processID("Timer")}>Timer</a>
    <a href={processID("Slide Duration")}>Slide Duration</a>
    <a href={processID("Transition Duration")}>Transition Duration</a>
    <a href={processID("Customization")}>Customization</a>
    <a href={processID("Accessibility")}>Accessibility</a>
    <a href={processID("Configuration")}>Configuration</a>
  {/snippet}
</DocLayout>