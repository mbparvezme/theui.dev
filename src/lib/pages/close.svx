---
title: Close button
dir: ".lib/pages"
description: A functional close button available for the Svelte app in theui-svelte library.
---

<script lang="ts">
  import DocLayout from "$lib/ui/doc/DocLayout.svelte";
  import DocHead from "$lib/ui/doc/Head.svelte";
  import DocBlock from "$lib/ui/doc/Block.svelte";
  import Code from "$lib/ui/doc/CodeBlock.svelte";
  import Example from "$lib/ui/doc/Example.svelte";
  import ConfigComponent from "$lib/ui/doc/ConfigComponent.svelte";
  import { processID, editURL } from "$lib";
  let { component }: {component: any } = $props();

  import { Close, Svg } from "theui-svelte";
</script>

<DocLayout>
  <DocHead title="Close Button" text="A close button to dismiss any component/element in your application." edit_url={editURL("close")} />

  <DocBlock>
    <p class="not-prose">This is a functional and accessible close button for your Svelte app. It is highly customizable and easy to use. You can use it to close or dismiss modals, popups, or any other elements.</p>
  </DocBlock>

  <DocBlock title="Example">
    <Example>
      <p class="not-prose">Start by importing the Close button from the component library. This versatile and accessible component makes it easy to add close functionality to modals, popups, or any dismissible elements in the Svelte app.</p>
      {#snippet example()}
        <Close />
      {/snippet}
      {#snippet code()}

```html
<script>
  import { Close } from "theui-svelte";
</script>

<Close />
```

      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Close Icon">
    <p class="not-prose">You can easily customize the close button by adding your own icon. Simply place the custom icon code inside the Close component, and it will replace the default icon with your new design. This allows for seamless integration of your preferred style or branding.</p>
    <p class="not-prose">You can use <code>svg</code> icon or <b>theui-svelte's</b> <code>Svg</code> component.</p>

    <Example>
      {#snippet example()}
        <Close>
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-circle-fill" viewBox="0 0 16 16">
            <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293z"/>
          </svg>
        </Close>

        <Close>
          <Svg>
            <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293z"/>
          </Svg>
        </Close>
      {/snippet}
      {#snippet code()}

```html
<!-- Using HTML svg icon -->
<Close>
  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" iewBox="0 0 16 16">
    <path d="M16 8A8 ... 0-.708-.708L8 7.293z"/>
  </svg>
</Close>

<!-- Using theui-svelte's Svg component -->
<Close>
  <Svg>
    <path d="M16 8A8 ... 0-.708-.708L8 7.293z"/>
  </Svg>
</Close>
```

      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Customize Style">
    <p class="not-prose">You can customize the button style simply writing the style classes just like as a native HTML element.</p>

    <Example>
      {#snippet example()}
        <Close class="bg-green-300 text-green-700" />
      {/snippet}
      {#snippet code()}

```html
<Close class="bg-green-300 text-green-700" />
```

      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Accessability">
    <p class="not-prose">The <code>Close</code> button includes an <code>ariaTitle</code> prop to enhance accessibility by providing a meaningful label for assistive technologies. By default, the value of <code>ariaTitle</code> is set to <code>"Close button"</code>. You can customize this value to better suit your application's context if needed.</p>
    <Code>

```html
<Close ariaTitle="Dismiss popup" />
```
    </Code>
    <p class="not-prose">In this example, the button will be labeled as "Dismiss popup" for assistive technologies, making it clear to users what action the button performs.</p>
  </DocBlock>

  <DocBlock title="Configuration">
    <ConfigComponent {component} />
  </DocBlock>

  {#snippet sidebar()}
    <a href={processID("Setup & Example")}>Setup & use</a>
    <a href={processID("Close Icon")}>Change icon</a>
    <a href={processID("Customize Style")}>Style customization</a>
    <a href={processID("Accessability")}>Accessability</a>
    <a href={processID("Configuration")}>Configuration</a>
  {/snippet}
</DocLayout>