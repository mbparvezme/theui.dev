---
title: Card
dir: ".lib/pages"
description: A dynamic and versatile way to showcase content, with a variety of customization options to fit any style or purpose.
---

<script lang="ts">
  import DocLayout from "$lib/ui/doc/DocLayout.svelte";
  import DocHead from "$lib/ui/doc/Head.svelte";
  import DocBlock from "$lib/ui/doc/Block.svelte";
  import Code from "$lib/ui/doc/CodeBlock.svelte";
  import Example from "$lib/ui/doc/Example.svelte";
  import ConfigComponent from "$lib/ui/doc/ConfigComponent.svelte";
  import { processID } from "$lib";
  import { Card, Button } from "theui-svelte";

  let { component, edit_url }: {component: any, edit_url?: string } = $props();
  const imgData = {src: "https://placehold.co/800x400/6A00F5/white", alt: "A demo image"}
  const imgDataY = {src: "https://placehold.co/300x600/6A00F5/white", alt: "A demo image"}
</script>

<DocLayout>
  <DocHead title="Card" text="The Card component offers a dynamic and versatile way to showcase content, with a variety of customization options to fit any style or purpose." {edit_url}/>

  <DocBlock>
    <p class="not-prose">The Card component is a versatile UI element used to present content in a structured and visually appealing way. It supports various customizations, allowing you to adjust its layout, images, and styling to fit different use cases. Whether you need to display text, images, or a combination of both, the Card component provides a flexible solution.</p>
  </DocBlock>

  <DocBlock title="Setup">
    <p class="not-prose">Start by importing the Card component from the theui-svelte library:</p>
    <Code>

```html
<script>
  import { Card } from "theui-svelte";
</script>
```
    </Code>
  </DocBlock>

  <DocBlock title="Example">
    <p class="not-prose">Here's a simple demonstration of how to use the <code>Card</code> component. This example highlights how you can easily combine a title, images, and custom content to create a visually appealing card. You can further personalize it by tweaking the layout and styles using the available props.</p>
    <p class="not-prose">The Alert component in theui-svelte allows full customization through the class attribute, giving you control over the styling to match your application's design needs. This flexibility ensures that the alert can seamlessly blend with various UI themes and aesthetics.</p>
    <Example>
      {#snippet example()}
      <div>
        <Card class="w-96" title="Card Title" topImage={imgData}>
          <p>Explore our tools and resources designed to help you grow. Stay connected and enjoy the journey!</p>
          <div>
            <Button label="Submit" />
          </div>
        </Card>
      </div>
      {/snippet}

      {#snippet code()}
```html
<script>
  const imgData = {src: "https://placehold.co/800x400/6A00F5/white", alt: "A demo image"}
</script>

<Card title="Card Title" topImage={imgData}>
  <p>Explore our tools and resources designed to help you grow. Stay connected and enjoy the journey!</p>
  <div>
    <Button label="Submit" />
  </div>
</Card>
```
      {/snippet}
    </Example>

    <p class="not-prose">Alternatively you can use related <b>snippet</b> for the card item like title and images.</p>
    <Code>

```html
<Card>
  {#snippet topImage()}
    <img class="block w-full rounded-t-md" src="..." alt="...">
  {/snippet}

  {#snippet title()}
    <h4 class="text-xl font-semibold">Card Title</h4>
  {/snippet}

  <p>Explore our tools and resources designed to help you grow. Stay connected and enjoy the journey!</p>
  <div>
    <Button label="Submit" />
  </div>
</Card>
```
    </Code>
  </DocBlock>

  <DocBlock title="Card Elements">
    <p class="not-prose">There are some prefix elements in the <code>Card</code> component. The example are showing below.</p>
    <Example title="Card Title">
      <p class="not-prose">You can use either <code>title prop</code> or <code>title snippet</code> to add card title.</p>
      {#snippet example()}
      <div>
        <Card class="w-96" title="Card Title">
          ...
        </Card>
      </div>
      {/snippet}

      {#snippet code()}
```html
<Card title="Card Title">
  ...
</Card>
```
      {/snippet}
    </Example>

    <Example>
      <p class="not-prose">You can use the <code>title</code> snippet also:</p>

      {#snippet code()}
```html
<Card>
  {#snippet title()}
    <h4 class="text-xl font-semibold">Card Title</h4>
  {/snippet}
</Card>
```
      {/snippet}
    </Example>

    <Example title="Card's Top Image">
      <p class="not-prose">Use either the <code>topImage prop</code> or <code>topImage snippet</code> to add image at the top in the <code>Card</code> component.</p>
      {#snippet example()}
      <div>
        <Card class="w-96" topImage={imgData} title="Card Title">
          <p>This is card content..</p>
        </Card>
      </div>
      {/snippet}

      {#snippet code()}
```html
<script>
  const imgData = {src: "https://placehold.co/800x400/6A00F5/white", alt: "A demo image"}

<Card title="Card Title" topImage={imgData}>
  ...
</Card>
```
      {/snippet}
    </Example>

    <Example title="Card's Bottom Image">
      <p class="not-prose">Use either the <code>bottomImage prop</code> or <code>bottomImage snippet</code> to add image at the top in the <code>Card</code> component.</p>
      {#snippet example()}
      <div>
        <Card class="w-96" bottomImage={imgData} title="Card Title">
          <p>This is card content..</p>
        </Card>
      </div>
      {/snippet}

      {#snippet code()}
```html
<script>
  const imgData = {src: "https://placehold.co/800x400/6A00F5/white", alt: "A demo image"}
</script>

<Card title="Card Title" bottomImage={imgData}>
  ...
</Card>
```
      {/snippet}
    </Example>

    <Example>
      <p class="not-prose">Or, use <code>topImage</code> snippet:</p>
      {#snippet code()}

```html
<Card>
  {#snippet title()}
    <h4 class="text-xl font-semibold">Card Title</h4>
  {/snippet}

  {#snippet topImage()}
    <img class="block w-full rounded-t-md" src="..." alt="...">
  {/snippet}

  <p>This is card content..</p>
</Card>
```
      {/snippet}
    </Example>

    <Example title="Card Content">
      <p class="not-prose">Any element the <code>Card</code> component will be the card content.</p>
      {#snippet example()}
      <div>
        <Card class="w-96">
          <p>This is card content..</p>
        </Card>
      </div>
      {/snippet}

      {#snippet code()}
```html
<Card>
  <p>This is card content..</p>
</Card>
```
      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Horizontal Card">
    <p class="not-prose">The <code>Card</code> component supports a flexible layout option that allows you to switch between vertical and horizontal orientations, depending on your design needs. To adopt a horizontal layout for the <code>Card</code> component, simply add the <code>horizontal</code> attribute. When this attribute is present, the card's content will be arranged side by side, making it ideal for designs where a wide layout is preferred.</p>

    <Example>
      {#snippet example()}
      <div>
        <Card class="w-96" bottomImage={imgDataY} title="Card Title" horizontal={true}>
          <p>This is card content..</p>
        </Card>
      </div>
      {/snippet}

      {#snippet code()}
```html
<Card>
  <p>This is card content..</p>
</Card>
```
      {/snippet}
    </Example>

  </DocBlock>

  <DocBlock title="Customization">
    <p class="not-prose">...</p>
  </DocBlock>

  <DocBlock title="Configuration">
    <ConfigComponent {component} />
  </DocBlock>

  {#snippet sidebar()}
    <a href="#setup-&-example">Setup & use</a>
    <a href={processID("Customization")}>Customization</a>
  {/snippet}
</DocLayout>