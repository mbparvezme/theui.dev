---
title: Container
category: Components
description: Structure your Svelte app with theui-svelte's Container component for flexible and responsive layouts.
dir: ".lib/pages"
tags: [container, layout, structure, responsive, component, svelte, svelte-5, theui-svelte, component-library, ui, tailwindcss]
---

<script lang="ts">
  import DocLayout from "$lib/ui/doc/DocLayout.svelte";
  import DocHead from "$lib/ui/doc/Head.svelte";
  import DocBlock from "$lib/ui/doc/Block.svelte";
  import Code from "$lib/ui/doc/CodeBlock.svelte";
  import { processID, editURL } from "$lib";
  let { component }: {component: any } = $props();

  import { Container } from "theui-svelte";
</script>

<DocLayout>
  <DocHead title="Container" text="The Container component is a flexible block element designed to control the spacing and structure of a web page. It provides a default padding setup but can be customized easily with your own classes." edit_url={editURL("container")} />

  <DocBlock title="Setup & Example">
    <p class="not-prose">Start by importing the Container component from the theui-svelte library. To use the Container component with its default settings, simply include it in your Svelte template:</p>
    <Code>

```html
<script>
  import { Container } from "theui-svelte";
</script>

<Container>
  <!-- Content -->
</Container>
```
    </Code>
  </DocBlock>

  <DocBlock title="Customization">
    <p class="not-prose">For customization, you can add your own classes to adjust the spacing, alignment, or other styles:</p>

    <Code>

```html
<Container class="bg-gray-100 py-8 px-0">
  <!-- Content -->
</Container>
```
    </Code>
  </DocBlock>

  {#snippet sidebar()}
    <a href="#setup-&-example">Setup & use</a>
    <a href={processID("Customization")}>Customization</a>
  {/snippet}
</DocLayout>