---
title: Modal
dir: ".lib/pages"
description: Integrate customizable modals into your Svelte app with TheUI-Svelte's Modal component, perfect for dialogs and pop-ups.
---

<script lang="ts">
  import DocLayout from "$lib/ui/doc/DocLayout.svelte";
  import DocHead from "$lib/ui/doc/Head.svelte";
  import DocBlock from "$lib/ui/doc/Block.svelte";
  import Code from "$lib/ui/doc/CodeBlock.svelte";
  import Example from "$lib/ui/doc/Example.svelte";
  import ConfigComponent from "$lib/ui/doc/ConfigComponent.svelte";
  import { processID } from "$lib";
  let { component, edit_url }: {component: any, edit_url?: string } = $props();

  import { Modal, Button } from "theui-svelte";
</script>

<DocLayout>
  <DocHead title="Modal" text="The Modal component provides a flexible and customizable way to display overlay content, perfect for dialogs, alerts, or any content that requires user interaction without leaving the current page." {edit_url}/>

  <DocBlock title="About">
    <p class="not-prose">Modals are versatile UI elements used to present important information or interactive content in a focused overlay. They help keep users engaged by keeping the main interface visible in the background while drawing attention to the modal content. The Modal component in theui-svelte offers various customization options, including animations, backdrops, and event handling, ensuring it fits seamlessly into your application's design and functionality.</p>
  </DocBlock>

  <DocBlock title="Example">
    <Example>
      <p class="not-prose">To use the Modal component, you need to import it into your Svelte file. This setup allows you to easily integrate the Modal component into your project.</p>
      {#snippet example()}
      <div>
        <Modal>
          {#snippet trigger()}
            <Button label="Modal Button" />
          {/snippet}
          Hello Modal!
        </Modal>
      </div>
      {/snippet}

      {#snippet code()}
```html
<script>
  import { Modal } from "theui-svelte";
</script>

<Modal label="Modal">
  Hello Modal!
</Modal>
```
      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Positioning">
    <Example>
      <p class="not-prose">The <code>position</code> prop in the Modal component determines where the modal is displayed vertically on the screen. It can be set to <code>'top'</code>, <code>'center'</code>, or <code>'bottom'</code>, with the default being <code>'center'</code>. This allows you to align the modal according to your design needs, whether you want it at the top for quick alerts, in the center for standard dialogs, or at the bottom for additional content.</p>
      {#snippet example()}
      <div>
        <Modal position="top">
          {#snippet trigger()}
            <Button label="Top Modal" />
          {/snippet}
          Top-aligned Modal
        </Modal>

        <Modal position="center">
          {#snippet trigger()}
            <Button label="Center Modal" />
          {/snippet}
          Centered Modal (default)
        </Modal>

        <Modal position="bottom">
          {#snippet trigger()}
            <Button label="Modal Modal" />
          {/snippet}
          Bottom-aligned Modal
        </Modal>
      </div>
      {/snippet}

      {#snippet code()}
```html
<Modal label="Top Modal" position="top">
  Top-aligned Modal
</Modal>

<Modal label="Center Modal" position="center"> <!-- Default -->
  Centered Modal
</Modal>

<Modal label="Modal Modal" position="bottom">
  Bottom-aligned Modal
</Modal>
```
      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Sizing">
    <Example>
      <p class="not-prose">The <code>size</code> prop controls the width of the Modal. Options include <code>'sm'</code> for small, <code>'md'</code> for medium (default), <code>'lg'</code> for large, and <code>'full'</code> for full-screen. This allows you to adjust the modal size based on your content needs.</p>
      {#snippet example()}
      <div>
        <Modal size="sm">
          {#snippet trigger()}
            <Button label="Small Modal" />
          {/snippet}
          Small size modal
        </Modal>

        <Modal size="md">
          {#snippet trigger()}
            <Button label="Medium Modal" />
          {/snippet}
          Medium size modal
        </Modal>

        <Modal size="lg">
          {#snippet trigger()}
            <Button label="Large Modal" />
          {/snippet}
          Large size modal
        </Modal>

        <Modal size="full">
          {#snippet trigger()}
            <Button label="Full Modal" />
          {/snippet}
          Full screen modal
        </Modal>
      </div>
      {/snippet}

      {#snippet code()}
```html
<!-- Small Modal -->
<Modal size="sm">
  <!-- Modal content -->
</Modal>

<!-- Medium-sized Modal (default) -->
<Modal size="md">
  <!-- Modal content -->
</Modal>

<!-- Large Modal -->
<Modal size="lg">
  <!-- Modal content -->
</Modal>

<!-- Full-width Modal -->
<Modal size="full">
  <!-- Modal content -->
</Modal>
```
      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Animation">
    <Example title="Animation Type">
      <p class="not-prose"> ... </p>
      {#snippet example()}
      <div>
        <Modal>
          {#snippet trigger()}
            <Button label="Modal Button" />
          {/snippet}
          Hello Modal!
        </Modal>
      </div>
      {/snippet}

      {#snippet code()}
```html
<Modal label="Modal">
  Hello Modal!
</Modal>
```
      {/snippet}
    </Example>

    <Example title="Animation Speed">
      <p class="not-prose"> ... </p>
      {#snippet example()}
      <div>
        <Modal>
          {#snippet trigger()}
            <Button label="Modal Button" />
          {/snippet}
          Hello Modal!
        </Modal>
      </div>
      {/snippet}

      {#snippet code()}
```html
<Modal label="Modal">
  Hello Modal!
</Modal>
```
      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Modal Backdrop">
    <Example title="Static Backdrop">
      <p class="not-prose"> ... </p>
      {#snippet example()}
      <div>
        <Modal>
          {#snippet trigger()}
            <Button label="Modal Button" />
          {/snippet}
          Hello Modal!
        </Modal>
      </div>
      {/snippet}

      {#snippet code()}
```html
<Modal label="Modal">
  Hello Modal!
</Modal>
```
      {/snippet}
    </Example>

    <Example title="Backdrop Customization">
      <p class="not-prose"> ... </p>
      {#snippet example()}
      <div>
        <Modal>
          {#snippet trigger()}
            <Button label="Modal Button" />
          {/snippet}
          Hello Modal!
        </Modal>
      </div>
      {/snippet}

      {#snippet code()}
```html
<Modal label="Modal">
  Hello Modal!
</Modal>
```
      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Disable Close Button">
    <Example>
      <p class="not-prose">The <code>closeButton</code> prop allows you to control the visibility of the close button in the Modal. By default, the close button is hidden (<code>false</code>). Set this prop to <code>true</code> to display the close button, giving users an easy way to close the modal.</p>
      {#snippet example()}
      <div>
        <Modal closeBtn={false}>
          {#snippet trigger()}
            <Button label="Modal Button" />
          {/snippet}
          Modal without close button!
        </Modal>
      </div>
      {/snippet}

      {#snippet code()}
```html
<Modal closeButton={false}>
  ...
</Modal>
```
      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Modal Open State">
    <Example>
      <p class="not-prose"> ... </p>
      {#snippet example()}
      <div>
        <Modal>
          {#snippet trigger()}
            <Button label="Modal Button" />
          {/snippet}
          Hello Modal!
        </Modal>
      </div>
      {/snippet}

      {#snippet code()}
```html
<Modal label="Modal">
  Hello Modal!
</Modal>
```
      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Configuration">
    <ConfigComponent title="Dropdown" component={component} />
  </DocBlock>

  {#snippet sidebar()}
    <a href={processID("Example")}>Example</a>
    <a href={processID("Customization")}>Customization</a>
    <a href={processID("Configuration")}>Configuration</a>
  {/snippet}
</DocLayout>