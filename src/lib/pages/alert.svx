---
title: Alert
dir: ".lib/pages"
description: Utilize theui-svelte's Alert component to display crucial messages and notifications in your Svelte applications with customizable styles.
---

<script lang="ts">
  import DocLayout from "$lib/ui/doc/DocLayout.svelte";
  import DocHead from "$lib/ui/doc/Head.svelte";
  import DocBlock from "$lib/ui/doc/Block.svelte";
  import Code from "$lib/ui/doc/CodeBlock.svelte";
  import Example from "$lib/ui/doc/Example.svelte";
  import ConfigComponent from "$lib/ui/doc/ConfigComponent.svelte";
  import { processID } from "$lib";
  let { component, edit_url }: {component: any, edit_url?: string } = $props();

  import { Alert } from "theui-svelte";
</script>

<DocLayout>
  <DocHead title="Alert" text="The Alert component displays feedback or contextual messages to your users. Using the Alert component, you can provide various types of feedback such as success, error, warning, or general information." {edit_url}/>

  <DocBlock title="Setup">
    <p class="not-prose">To use the Alert component in your project, import the required component:</p>
    <Code>

```html
<script>
  import { Alert } from "theui-svelte";
</script>
```
    </Code>
  </DocBlock>

  <DocBlock title="Example">
    <p class="not-prose">There are 4 types of <code>Alert</code> you can create using the <code>type</code> prop. The default type is <code>error</code>. Other types are <code>'info'</code>, <code>'success'</code> and <code>'warning'</code>. Here are some examples:</p>
    <Example title="Accordion By Props">
      <p class="not-prose">You can create an accordion item with a title and content props using the following example. </p>
      {#snippet example()}
        <div class="w-full">
          <Alert>I'm error (default) alert!</Alert>
          <Alert type="info">I'm info alert!</Alert>
          <Alert type="success">I'm success alert!</Alert>
          <Alert type="warning">I'm warning alert!</Alert>
        </div>
      {/snippet}
      {#snippet code()}

```html
<Alert>I'm error (default) alert!</Alert>
<Alert type="info">I'm info alert!</Alert>
<Alert type="success">I'm success alert!</Alert>
<Alert type="warning">I'm warning alert!</Alert>
```
      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Icon">
    <p class="not-prose">The Alert component in theui-svelte offers flexible icon customization to enhance the visual feedback for users. You can choose whether to display an icon and what type of icon should appear based on the alert type.</p>
    <Example>
      <p class="not-prose">By default, the Alert component does not display any icon. To enable an icon, simply add the icon attribute to the Alert component. No need to provide a value; just including the icon attribute will automatically display an icon that corresponds to the alert type (e.g., success, error, warning, info).</p>
      {#snippet example()}
      <div class="w-full">
        <Alert icon>I'm error (default) alert!</Alert>
        <Alert icon type="info">I'm info alert!</Alert>
        <Alert icon type="success">I'm success alert!</Alert>
        <Alert icon type="warning">I'm warning alert!</Alert>
      </div>
      {/snippet}
      {#snippet code()}

```html
<Alert icon>...</Alert>
<Alert icon type="info">...</Alert>
<Alert icon type="success">...</Alert>
<Alert icon type="warning">...</Alert>
```
      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Theme">
    <p class="not-prose">The Alert component offers two distinct themes to control its overall appearance. These themes help in aligning the alert's style with your application's design requirements.</p>
    <Example title="Available Themes">
      <ul>
        <li><b>default</b>: This is the standard theme, offering a balanced look suitable for most use cases.</li>
        <li><b>light</b>: A lighter variant that provides a more subtle and softer appearance.</li>
      </ul>
      {#snippet example()}
      <div class="w-full">
        <Alert theme="default">This is an error message in default theme!</Alert>
        <Alert theme="light">This is an error message in light theme!</Alert>
      </div>
      {/snippet}
      {#snippet code()}

```html
<Alert theme="default">...</Alert>
<Alert theme="light">...</Alert>
```
      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Variant">
    <p class="not-prose">The <code>Alert</code> component also supports different visual variants to further customize its appearance. These variants determine the structural style of the alert.</p>
    <Example title="Available Variants">
      <ul>
        <li><b>card</b>: Displays the alert as a card with defined borders and padding.</li>
        <li><b>borderTop</b>: Highlights the alert with a border at the top.</li>
        <li><b>borderBottom</b>: Adds a border at the bottom of the alert.</li>
        <li><b>borderStart</b>: Features a border on the starting side (left in LTR, right in RTL).</li>
      </ul>
      {#snippet example()}
      <div class="w-full">
        <Alert theme="light" variant="card">This is a card (default) variant alert!</Alert>
        <Alert theme="light" variant="borderTop">This alert has a top border!</Alert>
        <Alert theme="light" variant="borderBottom">This alert has a bottom border!</Alert>
        <Alert theme="light" variant="borderStart">This alert has a starting border!</Alert>
      </div>
      {/snippet}
      {#snippet code()}

```html
<Alert theme="light" variant="card">...</Alert>
<Alert theme="light" variant="borderTop">...</Alert>
<Alert theme="light" variant="borderBottom">...</Alert>
<Alert theme="light" variant="borderStart">...</Alert>
```
      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Dismissible Alert">
    <p class="not-prose">The Alert component also includes a dismissible feature, allowing users to close the alert when it's no longer needed. To make an alert dismissible, simply add the dismissible attribute to the Alert component. No need to provide a value; just including the dismissible attribute will automatically add a close button to the alert.</p>
    <Example>
      {#snippet example()}
      <div class="w-full">
        <Alert dismissible>This is a dismissible alert message!</Alert>
      </div>
      {/snippet}
      {#snippet code()}

```html
<Alert dismissible>...</Alert>
```
      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Custom Style">
    <Example>
      <p class="not-prose">The Alert component in theui-svelte allows full customization through the class attribute, giving you control over the styling to match your application's design needs. This flexibility ensures that the alert can seamlessly blend with various UI themes and aesthetics.</p>
      {#snippet example()}
      <div>
        <Alert class="bg-gradient-to-r from-red-400 to-yellow-500">I'm custom styled alert message!</Alert>
      </div>
      {/snippet}
      {#snippet code()}

```html

```
      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Configuration">
    <ConfigComponent {component} />
  </DocBlock>

  {#snippet sidebar()}
    <a href={processID("Setup")}>Setup</a>
    <a href={processID("Example")}>Example</a>
    <a href={processID("Icon")}>Alert icon</a>
    <a href={processID("Theme")}>Alert theme</a>
    <a href={processID("Variant")}>Alert Variant</a>
    <a href={processID("Dismissible Alert")}>Dismissible alert</a>
    <a href={processID("Custom Style")}>Custom Style</a>
    <a href={processID("Configuration")}>Configuration</a>
  {/snippet}

</DocLayout>