---
title: RTL support guide
dir: ".lib/pages"
description: Implement right-to-left (RTL) support in your Svelte app with TheUI-Svelte's comprehensive RTL guide. Achieve seamless bidirectional text compatibility.
---

<script lang="ts">
  import DocLayout from "$lib/ui/doc/DocLayout.svelte";
  import DocHead from "$lib/ui/doc/Head.svelte";
  import DocBlock from "$lib/ui/doc/Block.svelte";
  import Code from "$lib/ui/doc/CodeBlock.svelte";
  import { AccordionItem, Button } from "theui-svelte";
  import { processID, editURL } from "$lib";
  let { components }: {components: any } = $props();

  let toggleComponentDirection = () => {
    const element = document.getElementById("rtl-demo-accordion");
    element.dir = element.dir === "ltr" ? "rtl" : "ltr";
  }

  let toggleWebsiteDirection = () => {
    const element = document.getElementsByTagName("html")[0];
    element.dir = element.dir === "ltr" ? "rtl" : "ltr";
  }
</script>

<DocLayout>

  <DocHead title="RTL" text="Enable RTL support and styling globally across your site or to specific components only, ensuring flexibility and control over your layout." edit_url={editURL("rtl")} />


  <DocBlock>
    <p class="not-prose">The <b>theui-svelte</b> component library support RTL (Right-to-Left) layout, enabling seamless adaptation for RTL languages such as Arabic and Persian. This feature allows you to toggle between LTR and RTL layouts instantly, applying changes in real time for immediate result!</p>
  </DocBlock>

  <DocBlock title="RTL For The Entire Website">
    <p class="not-prose">To enable RTL across your entire site, simply set <code>dir="rtl"</code> attribute in the <code>&lt;html&gt;</code> tag in your root HTML file. By default, <b>theui-svelte</b> components display in LTR (Left-to-Right) mode, but adding this attribute will switch all components and elements to RTL mode.</p>
    <div class="flex justify-center">
      <Button onclick={toggleWebsiteDirection} rounded="full">Toggle Direction</Button>
    </div>
<Code>

```html
<!DOCTYPE html>
<html lang="en" dir="rtl">
  <head>
    <!-- your head content -->
  </head>
  <body>
    <!-- your body content -->
  </body>
</html>
```
</Code>

  </DocBlock>


  <DocBlock title="RTL For A Component">
    <p class="not-prose">If you want to apply RTL only to a specific component, wrap the component's parent element with the <code>dir="rtl"</code> attribute. This will enable RTL for just that component without affecting the rest of the site.</p>
<Code>

```html
<!-- Specific component in RTL mode -->
<div dir="rtl">
  <AnyComponent />
</div>
```
</Code>

    <h4 class="mt-4 mb-0">Accordion Example</h4>
    <p class="not-prose">Instead of entire website, you can change direction of any component you want. Just add <code>dir="rtl"</code> attribute to the parent element</p>

    <div class="flex justify-center">
      <Button onclick={toggleComponentDirection} rounded="full">Toggle Direction</Button>
    </div>
    <div id="rtl-demo-accordion" dir="ltr">
      <AccordionItem title="Accordion title" content="Accordion"/>
    </div>

<Code>

```html
<div dir="rtl">
  <AccordionItem title="Accordion title" content="Accordion"/>
</div>
```
</Code>

    <p class="not-prose">This approach gives you flexibility, allowing you to enable RTL at a global or component-specific level as needed.</p>
    <p class="not-prose">Enjoy building with theui-svelte and its RTL support!</p>
  </DocBlock>

  {#snippet sidebar()}
    <a href={processID("RTL For The Entire Website")}>RTL For The Entire Website</a>
    <a href={processID("RTL For A Component")}>RTL For A Component</a>
  {/snippet}

</DocLayout>