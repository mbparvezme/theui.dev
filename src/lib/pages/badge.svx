---
title: Badge
category: Components
description: Add dynamic visual indicators like notifications and status labels with theui-svelte’s Badge component.
dir: ".lib/pages"
tags: [badge, notification, status-label, component, svelte, svelte-5, theui-svelte, component-library, ui, tailwindcss]
---

<script lang="ts">
  import DocLayout from "$lib/ui/doc/DocLayout.svelte";
  import DocHead from "$lib/ui/doc/Head.svelte";
  import DocBlock from "$lib/ui/doc/Block.svelte";
  import Code from "$lib/ui/doc/CodeBlock.svelte";
  import Example from "$lib/ui/doc/Example.svelte";
  import ConfigComponent from "$lib/ui/doc/ConfigComponent.svelte";
  import { processID, editURL } from "$lib";
  let { component }: {component: any } = $props();

  import { Badge, Alert } from "theui-svelte";
</script>

<DocLayout>
  <DocHead title="Badge" text="The Badge component is a versatile UI element used for displaying small counts, labeling, or providing important indications to users. Badges are commonly used to highlight new content, show notifications, or denote status updates." edit_url={editURL("badge")} />

  <DocBlock title="Example">
    <p class="not-prose">To use the Badge component in your project, import the required component first. You can create <b>dot-badges</b> just using the <code>Badge</code> component or add text inside the <code>Badge</code> element to create a text badge. Here are some examples:</p>
    <Example>
      {#snippet example()}
        <Badge ariaTitle="Demo badge"/>
        <Badge ariaTitle="Demo badge">New</Badge>
      {/snippet}
      {#snippet code()}

```html
<script>
  import { Badge } from "theui-svelte";
</script>

<Badge ariaTitle="Demo badge"/>
<Badge ariaTitle="Demo badge">New</Badge>
```
      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Grow Badge">
    <p class="not-prose">By default, the font size of the Badge component is fixed, 0.8em, making it slightly smaller than regular text. However, you can make the font size inherit from te parent element by adding the <code>grow</code> attribute to the <code>Badge</code> component.</p>
    <Example>
      {#snippet example()}
          <div class="w-full">
            <p class="text-2xl">NOT GROWING <Badge ariaTitle="Demo badge"/></p>
            <p class="text-2xl">GROWING <Badge ariaTitle="Demo badge" grow/></p>
          </div>
          <div class="w-full">
            <p class="text-2xl">NOT GROWING <Badge ariaTitle="Demo badge">New</Badge></p>
            <p class="text-2xl">GROWING <Badge ariaTitle="Demo badge" grow>New</Badge></p>
          </div>
      {/snippet}
      {#snippet code()}

```html
<!-- Indicator badge -->
<Badge />
<!-- Text badge -->
<Badge grow>...</Badge>
```
      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Fixed Top Badge">
    <p class="not-prose">You can position badges at fixed locations relative to their parent elements using the <code>fixed</code> attribute.</p>
    <Example>
      {#snippet example()}
        <div class="flex items-center gap-8">
          <p class="relative p-2 bg-secondary">
            Notifications <Badge fixed class="dark:border-[#0d0d11]" />
          </p>
          <p class="relative p-2 bg-secondary">
            Notifications <Badge fixed class="dark:border-[#0d0d11]">New</Badge>
          </p>
        </div>
      {/snippet}
      {#snippet code()}

```html
<p class="relative p-2 bg-secondary">
  Notifications <Badge fixed />
</p>
<p class="relative p-2 bg-secondary">
  Notifications <Badge fixed>New</Badge>
</p>
```
      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Rounded Corner">
    <p class="not-prose">The <code>rounded</code> prop in the <code>Badge</code> component controls its border radius. Values: <code>none</code>, <code>sm</code>, <code>md</code>, <code>lg</code>, <code>xl</code>, <code>full</code>. Default is <code>md</code>.</p>
    <Example>
      {#snippet example()}
        <div class="flex items-center gap-8">
          <Badge ariaTitle="Demo badge" rounded="xl">New</Badge>
          <Badge ariaTitle="Demo badge" rounded="lg">New</Badge>
          <Badge ariaTitle="Demo badge" rounded="md">New</Badge>
          <Badge ariaTitle="Demo badge" rounded="sm">New</Badge>
          <Badge ariaTitle="Demo badge" rounded="none">New</Badge>
        </div>
      {/snippet}
      {#snippet code()}

```html
<Badge ... rounded="xl">New</Badge>
<Badge ... rounded="lg">New</Badge>
<Badge ... rounded="md">New</Badge>
<Badge ... rounded="sm">New</Badge>
<Badge ... rounded="none">New</Badge>
```
      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Customization">
    <Example>
      <p class="not-prose">Tailor every Badge to your needs with flexible color options that support both branding and semantic meaning. Built-in styles get you started, while custom CSS classes let you take full control. To change the background color, simply add your own CSS classes to the Badge component. Here’s an example:</p>
      {#snippet example()}
        <Badge ariaTitle="Demo badge" class="bg-green-500"/>
        <Badge ariaTitle="New badge" class="bg-yellow-400 text-black">New</Badge>
        <p class="relative font-semibold text-white p-2 bg-gradient-to-r from-red-400 to-yellow-500">
          Notifications <Badge class="border-white dark:border-black" text="New" fixed />
        </p>
      {/snippet}
      {#snippet code()}

```html
<Badge ariaTitle="Demo badge" class="bg-green-500"/>

<Badge ariaTitle="New badge" class="bg-yellow-400 text-black">New</Badge>

<p class="relative font-semibold text-white p-2 bg-gradient-to-r from-red-400 to-yellow-500">
  Notifications <Badge class="border-white dark:border-black" text="New" fixed />
</p>
```
      {/snippet}
    </Example>
  </DocBlock>

  <DocBlock title="Accessibility">
    <p class="not-prose">The component is designed with accessibility in mind, automatically handling ARIA attributes like <code>aria-label</code> through a visually hidden <code>&lt;span&gt;</code> element. This ensures assistive technologies can describe the badge's purpose. You only need to focus on providing meaningful text and maintaining proper color contrast for readability.</p>
  </DocBlock>

  <DocBlock title="Configuration">
    <ConfigComponent {component} />
  </DocBlock>

  {#snippet sidebar()}
    <a href={processID("Example")}>Example</a>
    <a href={processID("Grow Badge")}>Alert grow badge</a>
    <a href={processID("Fixed Top Badge")}>Fixed top badge</a>
    <a href={processID("Rounded Corner")}>Rounded corner</a>
    <a href={processID("Customization")}>Customization</a>
    <a href={processID("Accessibility")}>Accessibility</a>
    <a href={processID("Configuration")}>Configuration</a>
  {/snippet}

</DocLayout>